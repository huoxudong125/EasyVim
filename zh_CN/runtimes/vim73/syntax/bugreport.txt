

VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Aug 15 2010 15:14:24)
MS-Windows 32 位图形界面版本 带 OLE 支持
编译者 Bram@KIBAALE
大型版本 带图形界面。  可使用(+)与不可使用(-)的功能:
+arabic +autocmd +balloon_eval +browse ++builtin_terms +byte_offset +cindent +clientserver +clipboard +cmdline_compl 
+cmdline_hist +cmdline_info +comments +conceal +cryptv +cscope +cursorbind +cursorshape +dialog_con_gui +diff +digraphs
 -dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path +find_in_path +float +folding -footer 
+gettext/dyn -hangul_input +iconv/dyn +insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent 
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse +mouseshape +multi_byte_ime/dyn +multi_lang -mzscheme 
+netbeans_intg +ole -osfiletype +path_extra +perl/dyn +persistent_undo -postscript +printer -profile +python/dyn 
+python3/dyn +quickfix +reltime +rightleft +ruby/dyn +scrollbind +signs +smartindent -sniff +startuptime +statusline 
-sun_workshop +syntax +tag_binary +tag_old_static -tag_any_white +tcl/dyn -tgetent -termresponse +textobjects +title 
+toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo +vreplace +wildignore +wildmenu +windows 
+writebackup -xfontset -xim -xterm_save +xpm_w32 
     系统 vimrc 文件: "$VIM\vimrc"
     用户 vimrc 文件: "$HOME\_vimrc"
 第二用户 vimrc 文件: "$VIM\_vimrc"
      用户 exrc 文件: "$HOME\_exrc"
  第二用户 exrc 文件: "$VIM\_exrc"
    系统 gvimrc 文件: "$VIM\gvimrc"
    用户 gvimrc 文件: "$HOME\_gvimrc"
第二用户 gvimrc 文件: "$VIM\_gvimrc"
        系统菜单文件: "$VIMRUNTIME\menu.vim"
编译方式: cl -c /W3 /nologo  -I. -Iproto -DHAVE_PATHDEF -DWIN32   -DFEAT_CSCOPE -DFEAT_NETBEANS_INTG   -DFEAT_XPM_W32   -DWINVER=0x0400 -D_WIN32_WINNT=0x0400  /Fo.\ObjGOLYHTR/ /Ox /GL -DNDEBUG  /Zl /MT -DFEAT_OLE -DFEAT_MBYTE_IME -DDYNAMIC_IME -DFEAT_GUI_W32 -DDYNAMIC_ICONV -DDYNAMIC_GETTEXT -DFEAT_TCL -DDYNAMIC_TCL -DDYNAMIC_TCL_DLL=\"tcl83.dll\" -DDYNAMIC_TCL_VER=\"8.3\" -DFEAT_PYTHON -DDYNAMIC_PYTHON -DDYNAMIC_PYTHON_DLL=\"python27.dll\" -DFEAT_PYTHON3 -DDYNAMIC_PYTHON3 -DDYNAMIC_PYTHON3_DLL=\"python31.dll\" -DFEAT_PERL -DDYNAMIC_PERL -DDYNAMIC_PERL_DLL=\"perl512.dll\" -DFEAT_RUBY -DDYNAMIC_RUBY -DDYNAMIC_RUBY_VER=191 -DDYNAMIC_RUBY_DLL=\"msvcrt-ruby191.dll\" -DFEAT_BIG /Fd.\ObjGOLYHTR/ /Zi
链接方式: link /RELEASE /nologo /subsystem:windows /LTCG:STATUS oldnames.lib kernel32.lib advapi32.lib shell32.lib gdi32.lib  comdlg32.lib ole32.lib uuid.lib /machine:i386 /nodefaultlib gdi32.lib version.lib   winspool.lib comctl32.lib advapi32.lib shell32.lib  /machine:i386 /nodefaultlib libcmt.lib oleaut32.lib  user32.lib      /nodefaultlib:python27.lib /nodefaultlib:python31.lib   e:\tcl\lib\tclstub83.lib WSock32.lib e:\xpm\lib\libXpm.lib /PDB:gvim.pdb -debug
--- Directories and Files ---
$VIM = "C:\Program Files\Vim"
directory "C:\Program Files\Vim" exists
$VIMRUNTIME = "C:\Program Files\Vim\vim73"
directory "C:\Program Files\Vim\vim73" exists
"C:\Program Files\Vim\vim73\doc\help.txt" is readable
"C:\Program Files\Vim\vim73\doc/tags" is readable
"C:\Program Files\Vim\vim73/menu.vim" is readable
"C:\Program Files\Vim\vim73/filetype.vim" is readable
"C:\Program Files\Vim\vim73/syntax/synload.vim" is readable
--- Scripts sourced ---
  1: C:\Program Files\Vim\_vimrc
  2: C:\Program Files\Vim\vim73\colors\notepad2.vim
  3: C:\Program Files\Vim\vim73\mswin.vim
  4: C:\Program Files\Vim\vim73\autoload\paste.vim
  5: C:\Program Files\Vim\vim73\syntax\syntax.vim
  6: C:\Program Files\Vim\vim73\syntax\synload.vim
  7: C:\Program Files\Vim\vim73\syntax\syncolor.vim
  8: C:\Program Files\Vim\vim73\filetype.vim
  9: C:\Program Files\Vim\vim73\menu.vim
 10: C:\Program Files\Vim\vim73\lang\menu_zh_cn.utf-8.vim
 11: C:\Program Files\Vim\vim73\ftplugin.vim
 12: C:\Program Files\Vim\vim73\plugin\EVFileExplore.vim
 13: C:\Program Files\Vim\vim73\plugin\EVMark.vim
 14: C:\Program Files\Vim\vim73\plugin\a.vim
 15: C:\Program Files\Vim\vim73\plugin\acp.vim
 16: C:\Program Files\Vim\vim73\autoload\acp.vim
 17: C:\Program Files\Vim\vim73\plugin\g2b.vim
 18: C:\Program Files\Vim\vim73\plugin\matchparen.vim
 19: C:\Program Files\Vim\vim73\plugin\snipMate.vim
 20: C:\Program Files\Vim\vim73\plugin\spellfile.vim
 21: C:\Program Files\Vim\vim73\plugin\taglist.vim
 22: C:\Program Files\Vim\vim73\plugin\tohtml.vim
 23: C:\Program Files\Vim\vim73\plugin\vimballPlugin.vim
 24: C:\Program Files\Vim\vim73\plugin\vimcdoc.vim
 25: C:\Program Files\Vim\vim73\scripts.vim
 26: C:\Program Files\Vim\vim73\syntax\txt.vim
 27: C:\Program Files\Vim\vim73\autoload\EVHelp.vim
 28: C:\Program Files\Vim\vim73\syntax\help.vim
 29: C:\Program Files\Vim\vim73\ftplugin\help.vim
 30: C:\Program Files\Vim\vim73\syntax\vim.vim
 31: C:\Program Files\Vim\vim73\syntax\python.vim
 32: C:\Program Files\Vim\vim73\ftplugin\vim.vim
 33: C:\Program Files\Vim\vim73\syntax\colortest.vim
 34: C:\Program Files\Vim\vim73\bugreport.vim
--- 选项 ---
  aleph=224         nocscopetag           helplang=cn         modifiable        noshiftround          timeout
noarabic              cscopetagorder=0    hidden            nomodified            shiftwidth=4        timeoutlen=1000
  arabicshape       nocscopeverbose       history=30        nomore                shortmess=atIA      title
noallowrevins       nocursorbind        nohkmap               mouse=a           noshortname           titlelen=85
noaltkeymap         nocursorcolumn      nohkmapp            nomousefocus          showbreak=          titlestring=
  ambiwidth=double    cursorline          hlsearch            mousehide         noshowcmd           nottimeout
  autochdir           debug=              icon                mousemodel=popup  noshowfulltag         ttimeoutlen=-1
  autoindent        nodelcombine          iconstring=         mousetime=500       showmatch           ttybuiltin
noautoread            dictionary=         ignorecase          number            noshowmode          nottyfast
noautowrite         nodiff                imcmdline           numberwidth=4       showtabline=1       ttyscroll=999
noautowriteall        diffexpr=MyDiff() noimdisable           omnifunc=           sidescroll=0        undodir=.
  background=light    diffopt=filler      iminsert=2        noopendevice          sidescrolloff=0   noundofile
nobackup            nodigraph             imsearch=2          operatorfunc=       smartcase           undolevels=1000
  backupcopy=auto     display=            includeexpr=      nopaste               smartindent         undoreload=10000
  backupext=~         eadirection=both    incsearch           pastetoggle=      nosmarttab            updatecount=200
  balloondelay=600  noedcompatible        indentexpr=         patchexpr=          softtabstop=4       updatetime=4000
noballooneval         encoding=utf-8    noinfercase           patchmode=        nospell               verbose=0
  balloonexpr=        endofline           insertmode          path=.,,            spellcapcheck=      verbosefile=
nobinary              equalalways         isprint=@,~-255   nopreserveindent      spellfile=          virtualedit=block
nobomb                equalprg=           joinspaces          previewheight=12    spellsuggest=best novisualbell
  browsedir=        noerrorbells          key=              nopreviewwindow     nosplitbelow          warn
  bufhidden=          esckeys             keymap=             printdevice=      nosplitright        noweirdinvert
  buflisted           eventignore=        keywordprg=:help    printoptions=       startofline         wildchar=<Tab>
  buftype=            expandtab           langmap=            prompt              suffixesadd=        wildcharm=0
  cdpath=,,         noexrc                langmenu=           pumheight=0         swapfile            wildignore=
  cedit=^F            fileformat=dos      laststatus=2        quoteescape=\       swapsync=fsync      wildmenu
  charconvert=        filetype=vim      nolazyredraw        noreadonly            switchbuf=          wildmode=full
  cindent           nofkmap             nolinebreak           redrawtime=2000     synmaxcol=3000      wildoptions=
  cinoptions=         foldclose=          lines=32          norelativenumber      syntax=vim          winaltkeys=menu
  clipboard=          foldcolumn=1        linespace=4         remap               tabline=            window=31
  cmdheight=1         foldenable        nolisp                report=0            tabpagemax=10       winheight=1
  cmdwinheight=7      foldexpr=0        nolist                restorescreen       tabstop=4         nowinfixheight
  colorcolumn=        foldignore=#        listchars=eol:$   norevins              tagbsearch        nowinfixwidth
  columns=120         foldlevel=0         loadplugins       norightleft           taglength=0         winminheight=1
  commentstring="%s   foldlevelstart=-1   magic             noruler               tagrelative         winminwidth=1
nocompatible          foldmethod=manual   makeef=             rulerformat=        tags=./tags,tags    winwidth=20
  concealcursor=      foldminlines=1      makeprg=make        scroll=5            tagstack          nowrap
  conceallevel=0      foldnestmax=20      matchtime=2       noscrollbind          term=builtin_gui    wrapmargin=0
  completefunc=       formatexpr=         maxcombine=2        scrolljump=1      notermbidi            wrapscan
  confirm             formatprg=          maxfuncdepth=100    scrolloff=0         termencoding=       write
nocopyindent        nogdefault            maxmapdepth=1000  nosecure            noterse             nowriteany
  cpoptions=aABceFs   guifontwide=        maxmem=1796222      shellcmdflag=/c     textauto            writebackup
  cryptmethod=zip     guipty              maxmemtot=1796222   shellquote=         textmode            writedelay=0
  cscopepathcomp=0    guitablabel=%t      menuitems=25      noshellslash          textwidth=78
  cscopeprg=cscope    guitabtooltip=%F    modeline            shelltemp           thesaurus=
  cscopequickfix=     helpheight=20       modelines=5         shellxquote=      notildeop
  backspace=indent,eol,start
  backupdir=.,c:\tmp,c:\temp
  backupskip=C:\Users\hesheng\AppData\Local\Temp\*,C:\Users\hesheng\AppData\Local\Temp\*
  breakat= ^I!@*-+;:,./?
  casemap=internal,keepascii
  cinkeys=0{,0},0),:,0#,!^F,o,O,e
  cinwords=if,else,while,do,for,switch
  comments=sO:" -,mO:"  ,eO:"",:"
  complete=.,w,b,u,t,i
  completeopt=menu,preview
  define=^\s*#\s*define
  directory=.,c:\tmp,c:\temp
  errorfile=errors.err
  errorformat=%f(%l) : %t%*\D%n: %m,%*[^"]"%f"%*\D%l: %m,%f(%l) : %m,%*[^ ] %f %l: %m,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,%f|%l| %m
  fileencoding=utf-8
  fileencodings=ucs-bom,utf-8,gb2312,GBK,default,chinese,big5
  fileformats=dos,mac
  fillchars=vert: ,stl: ,stlnc: 
  foldmarker={{{,}}}
  foldopen=block,hor,mark,percent,quickfix,search,tag,undo
  foldtext=foldtext()
  formatoptions=2nmMcroql
  formatlistpat=^\s*\d\+[\]:.)}\t ]\s*
  grepformat=%f:%l:%m,%f:%l%m,%f  %l%m
  grepprg=findstr /n
  guicursor=n-v-c:block-Cursor/lCursor,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175
  guifont=Consolas:h10:cANSI
  guioptions=gmrLTeb
  helpfile=C:\Program Files\Vim\vim73\doc\help.txt
  highlight=8:SpecialKey,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn
  include=^\s*#\s*include
  indentkeys=0{,0},:,0#,!^F,o,O,e
  isfname=@,48-57,/,\,.,-,_,+,,,#,$,%,{,},[,],:,@-@,!,~,=
  isident=@,48-57,_,128-167,224-235
  iskeyword=@,48-57,_,128-167,224-235,_,$,@,%,#,-
  keymodel=startsel,stopsel
  lispwords=defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object
  matchpairs=(:),{:},[:]
  maxmempattern=1000
  mkspellmem=460000,2000,500
  mouseshape=i-r:beam,s:updown,sd:udsizing,vs:leftright,vd:lrsizing,m:no,ml:up-arrow,v:rightup-arrow
  nrformats=octal,hex
  paragraphs=IPLPPPQPP TPHPLIPpLpItpplpipbp
  printfont=Courier_New:h10
  printheader=%<%f%h%m%=Page %N
  rightleftcmd=search
  runtimepath=~/vimfiles,C:\Program Files\Vim/vimfiles,C:\Program Files\Vim\vim73,C:\Program Files\Vim/vimfiles/after,~/vimfiles/after
  scrollopt=ver,jump
  sections=SHNHH HUnhsh
  selection=exclusive
  selectmode=mouse,key
  sessionoptions=blank,buffers,curdir,folds,help,options,tabpages,winsize
  shell=C:\Windows\system32\cmd.exe
  shellpipe=>%s 2>&1
  shellredir=>%s 2>&1
  spelllang=en_us,en
  statusline=%< %14{b:this_buf_size}KB %14{&ff} %14{&fileencoding} %14(Line:%l~%L%) %14(column:%v%) %14p%%
  suffixes=.bak,~,.o,.h,.info,.swp,.obj
  titleold=Thanks for flying Vim
  ttytype=builtin_gui
  viewdir=C:\Program Files\Vim/vimfiles/view
  viewoptions=folds,options,cursor,slash
  viminfo='100,<50,s10,h,rA:,rB:,!
  whichwrap=b,s,<,>,[,]
--- 终端编码 ---
  t_AB=               t_Co=               t_fs=               t_mr=^[|1h          t_so=^[|16h         t_vi=
  t_AF=               t_CS=               t_IE=               t_ms=y              t_sr=               t_vs=
  t_AL=^[|%dI         t_cs=^[|%d;%dR      t_IS=               t_nd=^L             t_ts=               t_WP=
  t_al=^[|i           t_CV=^[|%d;%dV      t_ke=               t_op=               t_te=               t_WS=
  t_bc=               t_ut=y              t_ks=               t_RI=               t_ti=               t_SI=
  t_cd=               t_da=               t_le=^H             t_RV=               t_ue=^[|8H          t_EI=
  t_ce=^[|$           t_db=               t_mb=               t_Sb=               t_us=^[|8h          t_xs=
  t_cl=^[|C           t_DL=^[|%dD         t_md=^[|2h          t_Sf=               t_vb=^[|f           t_ZH=^[|4h
  t_cm=^[|%d;%dM      t_dl=^[|d           t_me=^[|31H         t_se=^[|16H         t_ve=               t_ZR=^[|4H
--- 终端按键 ---
     <Mouse>     <9b>M
--- 自动命令 ---
filetypedetect  BufEnter
    *.xpm     if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
    *.xpm2    setf xpm2
BufEnter
    *         let b:this_buf_size=getfsize(bufname("%"))/1024
    *.vba     setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.gz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.bz2 setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.zip setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
BufFilePost
    __Tag_List__
              call s:Tlist_Vim_Session_Load()
filetypedetect  BufNewFile
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    etc/a2ps.cfg
              setf a2ps
    etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    /etc/httpd/*.conf
              setf apache
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    /etc/apache2/*.conf*
              call s:StarSetf('apache')
    /etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    C:/Users/hesheng/.asoundrc
              setf alsaconf
    /usr/share/alsa/alsa.conf
              setf alsaconf
    /etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    /boot/grub/menu.lst
              setf grub
    /boot/grub/grub.conf
              setf grub
    /etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    /etc/blkid.tab
              setf xml
    /etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    *.cs      setf cs
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    etc/cdrdao.conf
              setf cdrdaoconf
    etc/defaults/cdrdao
              setf cdrdaoconf
    etc/default/cdrdao
              setf cdrdaoconf
    C:/Users/hesheng/.cdrdao
              setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    C:/Users/hesheng/.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    /etc/apt/sources.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    /etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/**  if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    /usr/**/gnupg/options.skel
              setf gpg
    *.gpi     setf gnuplot
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    /etc/group
              setf group
    /etc/group-
              setf group
    /etc/group.edit
              setf group
    /etc/gshadow
              setf group
    /etc/gshadow-
              setf group
    /etc/gshadow.edit
              setf group
    /var/backups/group.bak
              setf group
    /var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    /etc/host.conf
              setf hostconf
    /etc/hosts.allow
              setf hostsaccess
    /etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    /etc/initng/**/*.i
              setf initng
    *.ii      setf initng
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.kix     setf kix
    *.k       setf kwt
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    /etc/limits
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    /etc/libao.conf
              setf libao
    */.libao  setf libao
    /etc/sensors.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf*
              call s:StarSetf('lilo')
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    /etc/login.access
              setf loginaccess
    /etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    /etc/mail/aliases
              setf mailaliases
    /etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.man     setf man
    /etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    *.hgrc    setf cfg
    *hgrc     setf cfg
    /var/log/messages
              setf messages
    /var/log/messages.*[0-9]
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    /etc/modules.conf
              setf modconf
    /etc/conf.modules
              setf modconf
    /etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    *.rc      setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    /etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    /etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    /etc/passwd
              setf passwd
    /etc/passwd-
              setf passwd
    /etc/passwd.edit
              setf passwd
    /etc/shadow
              setf passwd
    /etc/shadow-
              setf passwd
    /var/backups/passwd.bak
              setf passwd
    /var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    /etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rexx    setf rexx
    *.rex     setf rexx
    *.jrexx   setf rexx
    *.rxj     setf rexx
    *.orx     setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders*
              call s:StarSetf('remind')
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gem     setf ruby
    *.gemspec setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    /etc/services
              setf services
    /etc/slp.conf
              setf slpconf
    /etc/slp.reg
              setf slpreg
    /etc/slp.spi
              setf slpspi
    /etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    /etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    /etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    /etc/sysctl.conf
              setf sysctl
    *.sdc     setf sdc
    /etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.uit     setf uil
    *.uil     setf uil
    /etc/udev/udev.conf
              setf udevconf
    /etc/udev/permissions.d/*.permissions
              setf udevperm
    /etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    /etc/updatedb.conf
              setf updatedb
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86c_xfree86_version = 3 | endif | setf xf86conf
    xorg.conf let b:xf86c_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86c_xfree86_version = 4 | setf xf86conf
    /etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    /etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    /etc/apache2/conf.*/*
              call s:StarSetf('apache')
    /etc/apache2/sites-*/*
              call s:StarSetf('apache')
    /etc/apache2/mods-*/*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    /etc/cron.d/*
              call s:StarSetf('crontab')
    /etc/apt/sources.list.d/*
              call s:StarSetf('debsources')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    /tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    /etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\{6\}
              setf mail
    /etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86c_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86c_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    /etc/xinetd.d/*
              call s:StarSetf('xinetd')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
BufNewFile
    *.txt     setlocal ft=txt 
    *.snippets\=
              set ft=snippet
filetypedetect  BufRead
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    etc/a2ps.cfg
              setf a2ps
    etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    /etc/httpd/*.conf
              setf apache
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    /etc/apache2/*.conf*
              call s:StarSetf('apache')
    /etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    C:/Users/hesheng/.asoundrc
              setf alsaconf
    /usr/share/alsa/alsa.conf
              setf alsaconf
    /etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    /boot/grub/menu.lst
              setf grub
    /boot/grub/grub.conf
              setf grub
    /etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    /etc/blkid.tab
              setf xml
    /etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    *.cs      setf cs
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    etc/cdrdao.conf
              setf cdrdaoconf
    etc/defaults/cdrdao
              setf cdrdaoconf
    etc/default/cdrdao
              setf cdrdaoconf
    C:/Users/hesheng/.cdrdao
              setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    C:/Users/hesheng/.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    /etc/apt/sources.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    /etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/**  if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    /usr/**/gnupg/options.skel
              setf gpg
    *.gpi     setf gnuplot
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    /etc/group
              setf group
    /etc/group-
              setf group
    /etc/group.edit
              setf group
    /etc/gshadow
              setf group
    /etc/gshadow-
              setf group
    /etc/gshadow.edit
              setf group
    /var/backups/group.bak
              setf group
    /var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    /etc/host.conf
              setf hostconf
    /etc/hosts.allow
              setf hostsaccess
    /etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    /etc/initng/**/*.i
              setf initng
    *.ii      setf initng
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.kix     setf kix
    *.k       setf kwt
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    /etc/limits
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    /etc/libao.conf
              setf libao
    */.libao  setf libao
    /etc/sensors.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf*
              call s:StarSetf('lilo')
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    /etc/login.access
              setf loginaccess
    /etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    /etc/mail/aliases
              setf mailaliases
    /etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.man     setf man
    /etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    *.hgrc    setf cfg
    *hgrc     setf cfg
    /var/log/messages
              setf messages
    /var/log/messages.*[0-9]
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    /etc/modules.conf
              setf modconf
    /etc/conf.modules
              setf modconf
    /etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    *.rc      setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    /etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    /etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    /etc/passwd
              setf passwd
    /etc/passwd-
              setf passwd
    /etc/passwd.edit
              setf passwd
    /etc/shadow
              setf passwd
    /etc/shadow-
              setf passwd
    /var/backups/passwd.bak
              setf passwd
    /var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    /etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rexx    setf rexx
    *.rex     setf rexx
    *.jrexx   setf rexx
    *.rxj     setf rexx
    *.orx     setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders*
              call s:StarSetf('remind')
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gem     setf ruby
    *.gemspec setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    /etc/services
              setf services
    /etc/slp.conf
              setf slpconf
    /etc/slp.reg
              setf slpreg
    /etc/slp.spi
              setf slpspi
    /etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    /etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    /etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    /etc/sysctl.conf
              setf sysctl
    *.sdc     setf sdc
    /etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.uit     setf uil
    *.uil     setf uil
    /etc/udev/udev.conf
              setf udevconf
    /etc/udev/permissions.d/*.permissions
              setf udevperm
    /etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    /etc/updatedb.conf
              setf updatedb
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86c_xfree86_version = 3 | endif | setf xf86conf
    xorg.conf let b:xf86c_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86c_xfree86_version = 4 | setf xf86conf
    /etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    /etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    /etc/apache2/conf.*/*
              call s:StarSetf('apache')
    /etc/apache2/sites-*/*
              call s:StarSetf('apache')
    /etc/apache2/mods-*/*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    /etc/cron.d/*
              call s:StarSetf('crontab')
    /etc/apt/sources.list.d/*
              call s:StarSetf('debsources')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    /tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    /etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\{6\}
              setf mail
    /etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86c_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86c_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    /etc/xinetd.d/*
              call s:StarSetf('xinetd')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
BufRead
    *.txt     setlocal ft=txt 
    *.snippets\=
              set ft=snippet
syntaxset  FileType
    *         exe "set syntax=" . expand("<amatch>")
filetypeplugin  FileType
    *         call s:LoadFTPlugin()
FileType
    snippet   setl noet fdm=indent
    *         if &ft != 'help' | call GetSnippets(snippets_dir, &ft) | endif
AcpGlobalAutoCommand  InsertEnter
    *         unlet! s:posLast s:lastUncompletable
AcpGlobalAutoCommand  InsertLeave
    *         call s:finishPopup(1)
MenuPopup
    *         call s:PopupDeleteMark()
filetypedetect  StdinReadPost
    *         if !did_filetype() | runtime! scripts.vim | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
Syntax
    *         call s:SynSet()
    c         if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cpp       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cs        if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    idl       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
VimEnter
    *         call EVOldFiles()   
matchparen  WinEnter
    *         call s:Highlight_Matching_Pair()
FuncUndefined
    *21_Tlist_*
              source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    *21_Tlist_Window_*
              source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    *21_Tlist_Menu_*
              source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    Tlist_*   source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    TagList_* source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
SourceCmd
    *.vba.gz  call vimball#Decompress(expand("<amatch>"))|call vimball#Vimball(1)
    *.vba.bz2 call vimball#Decompress(expand("<amatch>"))|call vimball#Vimball(1)
    *.vba.zip call vimball#Decompress(expand("<amatch>"))|call vimball#Vimball(1)
SpellFileMissing
    *         call spellfile#LoadFile(expand('<amatch>'))
matchparen  CursorMoved
    *         call s:Highlight_Matching_Pair()
AcpGlobalAutoCommand  CursorMovedI
    *         call s:feedPopup()
matchparen  CursorMovedI
    *         call s:Highlight_Matching_Pair()
--- Normal/Visual mode mappings ---
v  ["          *@:<C-U>exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
n  ["          *@:call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
v  []          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "bW")<CR>
n  []          *@m':call search('^\s*endf*\%[unction]\>', "bW")<CR>
v  [[          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "bW")<CR>
n  [[          *@m':call search('^\s*fu\%[nction]\>', "bW")<CR>
v  ]"          *@:<C-U>exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
n  ]"          *@:call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
v  ][          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "W")<CR>
n  ][          *@m':call search('^\s*endf*\%[unction]\>', "W")<CR>
v  ]]          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "W")<CR>
n  ]]          *@m':call search('^\s*fu\%[nction]\>', "W")<CR>
x  <C-A>       * <C-C>ggVG
s  <C-A>       * <C-C>gggH<C-O>G
o  <C-A>       * <C-C>gggH<C-O>G
n  <C-A>       * gggH<C-O>G
v  <C-C>       * "+y
s  <Tab>       * <Esc>i<Right><C-R>=TriggerSnippet()<CR>
   <C-Q>       * <C-V>
v  <C-S>       * <C-C>:update<CR>
no <C-S>       * :update<CR>
v  <C-V>       & "-c<Esc>:call paste#Paste()<CR>
no <C-V>         "+gP
n  <C-W><C-W>  * :new<CR><Esc>
n  <C-W>       * :close<CR><Esc>
v  <C-X>       * "+x
   <C-Y>       * <C-R>
   <C-Z>       * u
x  20.70       * &Edit.Copy&All <C-C>ggVG
s  20.70       * &Edit.Copy&All <C-C>gggH<C-O>G
o  20.70       * &Edit.Copy&All <C-C>gggH<C-O>G
n  R           * R<C-R>=<SNR>16_feedPopup()<CR>
n  \ihn          :IHN<CR>
n  \is           :IHS<CR>:A<CR>
n  \ih           :IHS<CR>
n  a           * a<C-R>=<SNR>16_feedPopup()<CR>
n  i           * i<C-R>=<SNR>16_feedPopup()<CR>
s  <S-Tab>     * <Esc>i<Right><C-R>=BackwardsSnippet()<CR>
   <F7>        * :call EVComments#Init(1)<CR>
   <F1>        * :call EVHelp#EVHelp(1)<CR>
o  <C-F4>      * <C-C><C-W>c
nv <C-F4>      * <C-W>c
o  <C-Tab>     * <C-C><C-W>w
nv <C-Tab>     * <C-W>w
   <M-Space>   * :simalt ~<CR>
v  <S-Insert>    <C-V>
v  <BS>        * d
v  <C-Del>       "*d
v  <S-Del>     * "+x
v  <C-Insert>  * "+y
no <S-Insert>    "+gP
--- Insert/Command-line mode mappings ---
i  <S-Tab>     * <C-R>=BackwardsSnippet()<CR>
i  <F5>        * <C-O>:call B2G()<CR>
i  <F6>        * <C-O>:call G2B()<CR>
!  <F7>        * <C-L>:call EVComments#Init(0)<CR>
!  <F1>        * <C-L>:call EVHelp#EVHelp(0)<CR>
c  <C-F4>      * <C-C><C-W>c
i  <C-F4>      * <C-O><C-W>c
c  <C-Tab>     * <C-C><C-W>w
i  <C-Tab>     * <C-O><C-W>w
c  <M-Space>   * <C-C>:simalt ~<CR>
i  <M-Space>   * <C-O>:simalt ~<CR>
c  <S-Insert>    <C-R>+
i  <S-Insert>    <C-V>
!  »           * <C-L>:
c  <C-A>       * <C-C>gggH<C-O>G
i  <C-A>       * <C-O>gg<C-O>gH<C-O>G
i  <Tab>       * <C-R>=TriggerSnippet()<CR>
i  <C-R><Tab>  * <C-R>=ShowAvailableSnips()<CR>
i  <C-S>       * <C-O>:update<CR>
!  <C-T>       * <C-L><C-T><Esc>
i  <C-V>       & x<BS><Esc>:call paste#Paste()<CR>gi
c  <C-V>         <C-R>+
i  <C-W><C-W>  * <C-L>:new<CR><Esc>
i  <C-W>       * <C-L>:close<CR><Esc>
i  <C-Y>       * <C-O><C-R>
i  <C-Z>       * <C-O>u
i  <Esc>         <C-L>
i  (           * ()<Left>
i  )           * ()<Left>
i  [           * []<Left>
i  \ihn          <Esc>:IHN<CR>
i  \is           <Esc>:IHS<CR>:A<CR>
i  \ih           <Esc>:IHS<CR>
i  ]           * []<Left>
i  {           * {}<Left>
i  }           * {}<Left>
--- Abbreviations ---

找不到缩写
--- Highlighting ---
SpecialKey     xxx term=bold ctermfg=1 guifg=Blue
NonText        xxx term=bold ctermfg=231 ctermbg=231 gui=bold guifg=#ffffff guibg=#ffffff
Directory      xxx term=bold ctermfg=1 guifg=Blue
ErrorMsg       xxx term=standout ctermfg=196 ctermbg=231 guifg=#fe0404 guibg=#ffffff
IncSearch      xxx term=reverse cterm=reverse ctermfg=95 ctermbg=231 gui=reverse guifg=#907070 guibg=#ffffff
Search         xxx term=reverse ctermfg=88 ctermbg=253 guifg=#800000 guibg=#e0dfe3
MoreMsg        xxx term=bold ctermfg=2 gui=bold guifg=SeaGreen
ModeMsg        xxx term=bold cterm=bold gui=bold
LineNr         xxx term=underline ctermfg=196 ctermbg=254 guifg=#f73600 guibg=#f0f0f0
Question       xxx term=standout ctermfg=2 gui=bold guifg=SeaGreen
StatusLine     xxx term=bold,reverse cterm=bold,reverse ctermfg=254 ctermbg=16 gui=bold,reverse guifg=#f0f0f0
                   guibg=#323200
StatusLineNC   xxx term=reverse cterm=reverse ctermfg=254 ctermbg=16 gui=reverse guifg=#f0f0f0 guibg=#262a2b
VertSplit      xxx term=reverse cterm=reverse ctermfg=254 ctermbg=16 gui=reverse guifg=#f0f0f0 guibg=#262a2b
Title          xxx term=bold ctermfg=16 gui=bold guifg=#000000
Visual         xxx term=reverse cterm=reverse ctermbg=146 guibg=#a3adc7
VisualNOS      xxx term=bold,underline cterm=bold,underline gui=bold,underline
WarningMsg     xxx term=standout ctermfg=4 guifg=Red
WildMenu       xxx term=standout ctermfg=0 ctermbg=14 guifg=Black guibg=Yellow
Folded         xxx term=standout ctermfg=31 ctermbg=254 guifg=#3c78a2 guibg=#f0f0f0
FoldColumn     xxx term=standout ctermfg=1 ctermbg=7 guifg=DarkBlue guibg=Grey
DiffAdd        xxx term=bold ctermbg=9 guibg=LightBlue
DiffChange     xxx term=bold ctermbg=13 guibg=LightMagenta
DiffDelete     xxx term=bold ctermfg=9 ctermbg=11 gui=bold guifg=Blue guibg=LightCyan
DiffText       xxx term=reverse cterm=bold ctermbg=12 gui=bold guibg=Red
SignColumn     xxx term=standout ctermfg=1 ctermbg=7 guifg=DarkBlue guibg=Grey
Conceal        xxx ctermfg=7 ctermbg=8 guifg=LightGrey guibg=DarkGrey
SpellBad       xxx term=reverse ctermbg=12 gui=undercurl guisp=Red
SpellCap       xxx term=reverse ctermbg=9 gui=undercurl guisp=Blue
SpellRare      xxx term=reverse ctermbg=13 gui=undercurl guisp=Magenta
SpellLocal     xxx term=underline ctermbg=11 gui=undercurl guisp=DarkCyan
Pmenu          xxx ctermfg=231 ctermbg=160 guifg=#ffffff guibg=#cb2f27
PmenuSel       xxx ctermbg=7 guibg=Grey
PmenuSbar      xxx ctermbg=7 guibg=Grey
PmenuThumb     xxx cterm=reverse gui=reverse
TabLine        xxx term=underline cterm=underline ctermfg=0 ctermbg=7 gui=underline guibg=LightGrey
TabLineSel     xxx term=bold cterm=bold gui=bold
TabLineFill    xxx term=reverse cterm=reverse gui=reverse
CursorColumn   xxx term=reverse ctermbg=7 guibg=Grey90
CursorLine     xxx term=underline cterm=underline ctermbg=230 guibg=#ffffcd
ColorColumn    xxx term=reverse ctermbg=12 guibg=LightRed
Cursor         xxx ctermfg=196 ctermbg=16 guifg=#fe0404 guibg=#000000
lCursor        xxx guifg=bg guibg=fg
MatchParen     xxx term=reverse cterm=bold ctermfg=196 ctermbg=231 gui=bold guifg=#fe0404 guibg=#ffffff
Normal         xxx ctermfg=16 ctermbg=231 guifg=#000000 guibg=#ffffff font=Consolas:h10:cANSI
Todo           xxx term=standout ctermfg=160 ctermbg=194 guifg=#e50808 guibg=#dbf3cd
Special        xxx term=bold ctermfg=16 guifg=#000000
String         xxx ctermfg=29 guifg=#0e9a4d
Constant       xxx term=underline ctermfg=32 guifg=#0086d2
Number         xxx ctermfg=196 guifg=#ff0036
Statement      xxx term=bold ctermfg=88 gui=bold guifg=#804000
Function       xxx ctermfg=88 guifg=#804000
PreProc        xxx term=underline ctermfg=196 guifg=#ff0007
Comment        xxx term=bold ctermfg=208 guifg=#ff8000
Type           xxx term=underline ctermfg=18 gui=bold guifg=#010180
Error          xxx term=reverse ctermfg=231 ctermbg=160 guifg=#ffffff guibg=#d40000
Identifier     xxx term=underline ctermfg=18 guifg=#010180
Label          xxx ctermfg=198 guifg=#ff0086
Underlined     xxx term=underline cterm=underline ctermfg=5 gui=underline guifg=SlateBlue
Ignore         xxx ctermfg=15 guifg=bg
Character      xxx links to Constant
Boolean        xxx links to Constant
Float          xxx links to Number
Conditional    xxx links to Statement
Repeat         xxx links to Statement
Operator       xxx links to Statement
Keyword        xxx links to Statement
Exception      xxx links to Statement
Include        xxx links to PreProc
Define         xxx links to PreProc
Macro          xxx links to PreProc
PreCondit      xxx links to PreProc
StorageClass   xxx links to Type
Structure      xxx links to Type
Typedef        xxx links to Type
Tag            xxx links to Special
SpecialChar    xxx links to Special
Delimiter      xxx links to Special
SpecialComment xxx links to Special
Debug          xxx links to Special
txtTodo        xxx links to Todo
txtError       xxx links to ErrorMsg
txtComment     xxx links to Special
txtTitle       xxx links to Title
txtList        xxx links to SignColumn
txtUrl         xxx links to Underlined
txtReference   xxx links to DiffAdd
txtApostrophe  xxx links to MoreMsg
txtQuotes      xxx links to MoreMsg
txtParentesis  xxx links to Special
txtBrackets    xxx links to Special
txtEmailMsg    xxx links to Structure
helpHeadline   xxx links to Statement
helpSectionDelim xxx links to PreProc
helpIgnore     xxx links to Ignore
helpExample    xxx links to Comment
helpBar        xxx links to Ignore
helpStar       xxx links to Ignore
helpHyperTextJump xxx links to Subtitle
helpHyperTextEntry xxx links to String
helpNormal     xxx cleared
helpVim        xxx links to Identifier
helpOption     xxx links to Type
helpHeader     xxx links to PreProc
helpGraphic    xxx cleared
helpNote       xxx links to Todo
helpSpecial    xxx links to Special
helpLeadBlank  xxx cleared
helpNotVi      xxx links to Special
helpComment    xxx links to Comment
helpConstant   xxx links to Constant
helpString     xxx links to String
helpCharacter  xxx links to Character
helpNumber     xxx links to Number
helpBoolean    xxx links to Boolean
helpFloat      xxx links to Float
helpIdentifier xxx links to Identifier
helpFunction   xxx links to Function
helpStatement  xxx links to Statement
helpConditional xxx links to Conditional
helpRepeat     xxx links to Repeat
helpLabel      xxx links to Label
helpOperator   xxx links to Operator
helpKeyword    xxx links to Keyword
helpException  xxx links to Exception
helpPreProc    xxx links to PreProc
helpInclude    xxx links to Include
helpDefine     xxx links to Define
helpMacro      xxx links to Macro
helpPreCondit  xxx links to PreCondit
helpType       xxx links to Type
helpStorageClass xxx links to StorageClass
helpStructure  xxx links to Structure
helpTypedef    xxx links to Typedef
helpSpecialChar xxx links to SpecialChar
helpTag        xxx links to Tag
helpDelimiter  xxx links to Delimiter
helpSpecialComment xxx links to SpecialComment
helpDebug      xxx links to Debug
helpUnderlined xxx links to Underlined
helpError      xxx links to Error
helpTodo       xxx links to Todo
helpURL        xxx links to String
Subtitle       xxx links to Identifier
vimTodo        xxx links to Todo
vimCommand     xxx links to Statement
vimOption      xxx links to PreProc
vimErrSetting  xxx links to vimError
vimAutoEvent   xxx links to Type
vimGroup       xxx links to Type
vimHLGroup     xxx links to vimGroup
vimFuncName    xxx links to Function
vimNumber      xxx links to Number
vimAddress     xxx links to vimMark
vimAutoCmd     xxx links to vimCommand
vimExtCmd      xxx cleared
vimFilter      xxx cleared
vimLet         xxx links to vimCommand
vimMap         xxx links to vimCommand
vimMark        xxx links to Number
vimSet         xxx cleared
vimSyntax      xxx links to vimCommand
vimUserCmd     xxx cleared
vimCmdSep      xxx cleared
vimIsCommand   xxx cleared
vimVar         xxx cleared
vimFBVar       xxx cleared
vimInsert      xxx links to vimString
vimBehaveModel xxx links to vimBehave
vimBehaveError xxx links to vimError
vimBehave      xxx links to vimCommand
vimFTCmd       xxx links to vimCommand
vimFTOption    xxx links to vimSynType
vimFTError     xxx links to vimError
vimFiletype    xxx cleared
vimFunction    xxx cleared
vimFunctionError xxx links to vimError
vimLineComment xxx links to vimComment
vimSpecFile    xxx links to Identifier
vimOper        xxx links to Operator
vimOperParen   xxx cleared
vimComment     xxx links to Comment
vimString      xxx links to String
vimSubst       xxx links to vimCommand
vimRegister    xxx links to SpecialChar
vimCmplxRepeat xxx links to SpecialChar
vimRegion      xxx cleared
vimSynLine     xxx cleared
vimNotation    xxx links to Special
vimCtrlChar    xxx links to SpecialChar
vimFuncVar     xxx links to Identifier
vimContinue    xxx links to Special
vimAugroupKey  xxx links to vimCommand
vimAugroup     xxx cleared
vimAugroupError xxx cleared
vimFunc        xxx links to vimError
vimParenSep    xxx links to Delimiter
vimSep         xxx links to Delimiter
vimOperError   xxx links to Error
vimFuncKey     xxx links to vimCommand
vimFuncSID     xxx links to Special
vimAbb         xxx links to vimCommand
vimEcho        xxx cleared
vimEchoHL      xxx links to vimCommand
vimExecute     xxx cleared
vimIf          xxx cleared
vimHighlight   xxx links to vimCommand
vimNorm        xxx links to vimCommand
vimNotFunc     xxx links to vimCommand
vimUserCommand xxx links to vimCommand
vimFuncBody    xxx cleared
vimFuncBlank   xxx cleared
vimPattern     xxx links to Type
vimSpecFileMod xxx links to vimSpecFile
vimEscapeBrace xxx cleared
vimSetEqual    xxx cleared
vimSetString   xxx links to vimString
vimSubstRep    xxx cleared
vimSubstRange  xxx cleared
vimUserAttrb   xxx links to vimSpecial
vimUserAttrbKey xxx links to vimOption
vimUserAttrbCmplt xxx links to vimSpecial
vimUserCmdError xxx links to Error
vimUserAttrbCmpltFunc xxx links to Special
vimCommentString xxx links to vimString
vimEnvvar      xxx links to PreProc
vimPatSepErr   xxx links to vimPatSep
vimPatSep      xxx links to SpecialChar
vimPatSepZ     xxx links to vimPatSep
vimPatSepZone  xxx links to vimString
vimPatSepR     xxx links to vimPatSep
vimPatRegion   xxx cleared
vimNotPatSep   xxx links to vimString
vimStringCont  xxx links to vimString
vimSubstTwoBS  xxx links to vimString
vimSubstSubstr xxx links to SpecialChar
vimCollection  xxx cleared
vimSubstPat    xxx cleared
vimSubst1      xxx links to vimSubst
vimSubstDelim  xxx links to Delimiter
vimSubstRep4   xxx cleared
vimSubstFlagErr xxx links to vimError
vimCollClass   xxx cleared
vimCollClassErr xxx links to vimError
vimSubstFlags  xxx links to Special
vimMarkNumber  xxx links to vimNumber
vimPlainMark   xxx links to vimMark
vimPlainRegister xxx links to vimRegister
vimSetMod      xxx links to vimOption
vimSetSep      xxx links to Statement
vimMapMod      xxx links to vimBracket
vimMapLhs      xxx cleared
vimAutoCmdSpace xxx cleared
vimAutoEventList xxx cleared
vimAutoCmdSfxList xxx cleared
vimEchoHLNone  xxx links to vimGroup
vimMapBang     xxx links to vimCommand
vimUnmap       xxx links to vimMap
vimMapRhs      xxx cleared
vimMapModKey   xxx links to vimFuncSID
vimMapModErr   xxx links to vimError
vimMapRhsExtend xxx cleared
vimMenuBang    xxx cleared
vimMenuPriority xxx cleared
vimMenuName    xxx links to PreProc
vimMenuMod     xxx links to vimMapMod
vimMenuNameMore xxx links to vimMenuName
vimMenuMap     xxx cleared
vimMenuRhs     xxx cleared
vimBracket     xxx links to Delimiter
vimUserFunc    xxx links to Normal
vimElseIfErr   xxx links to Error
vimBufnrWarn   xxx links to vimWarn
vimNormCmds    xxx cleared
vimGroupSpecial xxx links to Special
vimGroupList   xxx cleared
vimSynError    xxx links to Error
vimSynContains xxx links to vimSynOption
vimSynKeyContainedin xxx links to vimSynContains
vimSynNextgroup xxx links to vimSynOption
vimSynType     xxx links to vimSpecial
vimAuSyntax    xxx cleared
vimSynCase     xxx links to Type
vimSynCaseError xxx links to vimError
vimClusterName xxx cleared
vimGroupName   xxx cleared
vimGroupAdd    xxx links to vimSynOption
vimGroupRem    xxx links to vimSynOption
vimSynKeyOpt   xxx links to vimSynOption
vimSynKeyRegion xxx cleared
vimMtchComment xxx links to vimComment
vimSynMtchOpt  xxx links to vimSynOption
vimSynRegPat   xxx links to vimString
vimSynMatchRegion xxx cleared
VimSynMtchCchar xxx cleared
vimSynPatRange xxx links to vimString
vimSynNotPatRange xxx links to vimSynRegPat
vimSynRegOpt   xxx links to vimSynOption
vimSynReg      xxx links to Type
vimSynMtchGrp  xxx links to vimSynOption
vimSynRegion   xxx cleared
vimSynPatMod   xxx cleared
vimSyncC       xxx links to Type
vimSyncLines   xxx cleared
vimSyncMatch   xxx cleared
vimSyncError   xxx links to Error
vimSyncLinebreak xxx cleared
vimSyncLinecont xxx cleared
vimSyncRegion  xxx cleared
vimSyncGroupName xxx links to vimGroupName
vimSyncKey     xxx links to Type
vimSyncGroup   xxx links to vimGroupName
vimSyncNone    xxx links to Type
vimHiLink      xxx cleared
vimHiClear     xxx cleared
vimHiKeyList   xxx cleared
vimHiBang      xxx cleared
vimHiGroup     xxx links to vimGroupName
vimHiAttrib    xxx links to PreProc
vimFgBgAttrib  xxx links to vimHiAttrib
vimHiAttribList xxx links to vimError
vimHiCtermColor xxx cleared
vimHiFontname  xxx cleared
vimHiGuiFontname xxx cleared
vimHiGuiRgb    xxx links to vimNumber
vimHiCtermError xxx links to vimError
vimHiTerm      xxx links to Type
vimHiCTerm     xxx links to vimHiTerm
vimHiStartStop xxx links to vimHiTerm
vimHiCtermFgBg xxx links to vimHiTerm
vimHiGui       xxx links to vimHiTerm
vimHiGuiFont   xxx links to vimHiTerm
vimHiGuiFgBg   xxx links to vimHiTerm
vimHiKeyError  xxx links to vimError
vimHiTermcap   xxx cleared
vimCommentTitle xxx links to PreProc
vimCommentTitleLeader xxx cleared
vimSearchDelim xxx links to Statement
vimSearch      xxx links to vimString
vimGlobal      xxx cleared
vimEmbedError  xxx links to vimError
pythonStatement xxx links to Statement
pythonFunction xxx links to Function
pythonConditional xxx links to Conditional
pythonRepeat   xxx links to Repeat
pythonOperator xxx links to Operator
pythonException xxx links to Exception
pythonInclude  xxx links to Include
pythonDecorator xxx links to Define
pythonTodo     xxx links to Todo
pythonComment  xxx links to Comment
pythonEscape   xxx links to Special
pythonString   xxx links to String
pythonSpaceError xxx cleared
pythonDoctest  xxx links to Special
pythonRawString xxx links to String
pythonNumber   xxx links to Number
pythonBuiltin  xxx links to Function
pythonExceptions xxx links to Structure
pythonDoctestValue xxx links to Define
pythonSync     xxx cleared
vimScriptDelim xxx links to Comment
vimPythonRegion xxx cleared
vimAugroupSyncA xxx cleared
vimAuHighlight xxx links to vimHighlight
vimError       xxx links to Error
vimKeyCodeError xxx links to vimError
vimWarn        xxx links to WarningMsg
vimAutoCmdOpt  xxx links to vimOption
vimAutoSet     xxx links to vimCommand
vimCondHL      xxx links to vimCommand
vimElseif      xxx links to vimCondHL
vimSynOption   xxx links to Special
vimKeyCode     xxx links to vimSpecFile
vimSpecial     xxx links to Type
vimFold        xxx links to Folded
vimHLMod       xxx links to PreProc
vimKeyword     xxx links to Statement
vimStatement   xxx links to Statement
col_black_white xxx ctermfg=0 ctermbg=15 guifg=black guibg=white
col_white_black xxx ctermfg=15 ctermbg=0 guifg=white guibg=black
col_black_black xxx ctermfg=0 ctermbg=0 guifg=black guibg=black
col_darkred_white xxx ctermfg=4 ctermbg=15 guifg=darkred guibg=white
col_white_darkred xxx ctermfg=15 ctermbg=4 guifg=white guibg=darkred
col_darkred_black xxx ctermfg=4 ctermbg=0 guifg=darkred guibg=black
col_black_darkred xxx ctermfg=0 ctermbg=4 guifg=black guibg=darkred
col_darkgreen_white xxx ctermfg=2 ctermbg=15 guifg=darkgreen guibg=white
col_white_darkgreen xxx ctermfg=15 ctermbg=2 guifg=white guibg=darkgreen
col_darkgreen_black xxx ctermfg=2 ctermbg=0 guifg=darkgreen guibg=black
col_black_darkgreen xxx ctermfg=0 ctermbg=2 guifg=black guibg=darkgreen
col_brown_white xxx ctermfg=6 ctermbg=15 guifg=brown guibg=white
col_white_brown xxx ctermfg=15 ctermbg=6 guifg=white guibg=brown
col_brown_black xxx ctermfg=6 ctermbg=0 guifg=brown guibg=black
col_black_brown xxx ctermfg=0 ctermbg=6 guifg=black guibg=brown
col_darkblue_white xxx ctermfg=1 ctermbg=15 guifg=darkblue guibg=white
col_white_darkblue xxx ctermfg=15 ctermbg=1 guifg=white guibg=darkblue
col_darkblue_black xxx ctermfg=1 ctermbg=0 guifg=darkblue guibg=black
col_black_darkblue xxx ctermfg=0 ctermbg=1 guifg=black guibg=darkblue
col_darkmagenta_white xxx ctermfg=5 ctermbg=15 guifg=darkmagenta guibg=white
col_white_darkmagenta xxx ctermfg=15 ctermbg=5 guifg=white guibg=darkmagenta
col_darkmagenta_black xxx ctermfg=5 ctermbg=0 guifg=darkmagenta guibg=black
col_black_darkmagenta xxx ctermfg=0 ctermbg=5 guifg=black guibg=darkmagenta
col_darkcyan_white xxx ctermfg=3 ctermbg=15 guifg=darkcyan guibg=white
col_white_darkcyan xxx ctermfg=15 ctermbg=3 guifg=white guibg=darkcyan
col_darkcyan_black xxx ctermfg=3 ctermbg=0 guifg=darkcyan guibg=black
col_black_darkcyan xxx ctermfg=0 ctermbg=3 guifg=black guibg=darkcyan
col_lightgray_white xxx ctermfg=7 ctermbg=15 guifg=lightgray guibg=white
col_white_lightgray xxx ctermfg=15 ctermbg=7 guifg=white guibg=lightgray
col_lightgray_black xxx ctermfg=7 ctermbg=0 guifg=lightgray guibg=black
col_black_lightgray xxx ctermfg=0 ctermbg=7 guifg=black guibg=lightgray
col_darkgray_white xxx ctermfg=8 ctermbg=15 guifg=darkgray guibg=white
col_white_darkgray xxx ctermfg=15 ctermbg=8 guifg=white guibg=darkgray
col_darkgray_black xxx ctermfg=8 ctermbg=0 guifg=darkgray guibg=black
col_black_darkgray xxx ctermfg=0 ctermbg=8 guifg=black guibg=darkgray
col_red_white  xxx ctermfg=12 ctermbg=15 guifg=red guibg=white
col_white_red  xxx ctermfg=15 ctermbg=12 guifg=white guibg=red
col_red_black  xxx ctermfg=12 ctermbg=0 guifg=red guibg=black
col_black_red  xxx ctermfg=0 ctermbg=12 guifg=black guibg=red
col_green_white xxx ctermfg=10 ctermbg=15 guifg=green guibg=white
col_white_green xxx ctermfg=15 ctermbg=10 guifg=white guibg=green
col_green_black xxx ctermfg=10 ctermbg=0 guifg=green guibg=black
col_black_green xxx ctermfg=0 ctermbg=10 guifg=black guibg=green
col_yellow_white xxx ctermfg=14 ctermbg=15 guifg=yellow guibg=white
col_white_yellow xxx ctermfg=15 ctermbg=14 guifg=white guibg=yellow
col_yellow_black xxx ctermfg=14 ctermbg=0 guifg=yellow guibg=black
col_black_yellow xxx ctermfg=0 ctermbg=14 guifg=black guibg=yellow
col_blue_white xxx ctermfg=9 ctermbg=15 guifg=blue guibg=white
col_white_blue xxx ctermfg=15 ctermbg=9 guifg=white guibg=blue
col_blue_black xxx ctermfg=9 ctermbg=0 guifg=blue guibg=black
col_black_blue xxx ctermfg=0 ctermbg=9 guifg=black guibg=blue
col_magenta_white xxx ctermfg=13 ctermbg=15 guifg=magenta guibg=white
col_white_magenta xxx ctermfg=15 ctermbg=13 guifg=white guibg=magenta
col_magenta_black xxx ctermfg=13 ctermbg=0 guifg=magenta guibg=black
col_black_magenta xxx ctermfg=0 ctermbg=13 guifg=black guibg=magenta
col_cyan_white xxx ctermfg=11 ctermbg=15 guifg=cyan guibg=white
col_white_cyan xxx ctermfg=15 ctermbg=11 guifg=white guibg=cyan
col_cyan_black xxx ctermfg=11 ctermbg=0 guifg=cyan guibg=black
col_black_cyan xxx ctermfg=0 ctermbg=11 guifg=black guibg=cyan
col_white_white xxx ctermfg=15 ctermbg=15 guifg=white guibg=white
col_grey_white xxx ctermfg=7 ctermbg=15 guifg=grey guibg=white
col_white_grey xxx ctermfg=15 ctermbg=7 guifg=white guibg=grey
col_grey_black xxx ctermfg=7 ctermbg=0 guifg=grey guibg=black
col_black_grey xxx ctermfg=0 ctermbg=7 guifg=black guibg=grey
col_lightred_white xxx ctermfg=12 ctermbg=15 guifg=lightred guibg=white
col_white_lightred xxx ctermfg=15 ctermbg=12 guifg=white guibg=lightred
col_lightred_black xxx ctermfg=12 ctermbg=0 guifg=lightred guibg=black
col_black_lightred xxx ctermfg=0 ctermbg=12 guifg=black guibg=lightred
col_lightgreen_white xxx ctermfg=10 ctermbg=15 guifg=lightgreen guibg=white
col_white_lightgreen xxx ctermfg=15 ctermbg=10 guifg=white guibg=lightgreen
col_lightgreen_black xxx ctermfg=10 ctermbg=0 guifg=lightgreen guibg=black
col_black_lightgreen xxx ctermfg=0 ctermbg=10 guifg=black guibg=lightgreen
col_lightyellow_white xxx ctermfg=14 ctermbg=15 guifg=lightyellow guibg=white
col_white_lightyellow xxx ctermfg=15 ctermbg=14 guifg=white guibg=lightyellow
col_lightyellow_black xxx ctermfg=14 ctermbg=0 guifg=lightyellow guibg=black
col_black_lightyellow xxx ctermfg=0 ctermbg=14 guifg=black guibg=lightyellow
col_lightblue_white xxx ctermfg=9 ctermbg=15 guifg=lightblue guibg=white
col_white_lightblue xxx ctermfg=15 ctermbg=9 guifg=white guibg=lightblue
col_lightblue_black xxx ctermfg=9 ctermbg=0 guifg=lightblue guibg=black
col_black_lightblue xxx ctermfg=0 ctermbg=9 guifg=black guibg=lightblue
col_lightmagenta_white xxx ctermfg=13 ctermbg=15 guifg=lightmagenta guibg=white
col_white_lightmagenta xxx ctermfg=15 ctermbg=13 guifg=white guibg=lightmagenta
col_lightmagenta_black xxx ctermfg=13 ctermbg=0 guifg=lightmagenta guibg=black
col_black_lightmagenta xxx ctermfg=0 ctermbg=13 guifg=black guibg=lightmagenta
col_lightcyan_white xxx ctermfg=11 ctermbg=15 guifg=lightcyan guibg=white
col_white_lightcyan xxx ctermfg=15 ctermbg=11 guifg=white guibg=lightcyan
col_lightcyan_black xxx ctermfg=11 ctermbg=0 guifg=lightcyan guibg=black
col_black_lightcyan xxx ctermfg=0 ctermbg=11 guifg=black guibg=lightcyan
col_black      xxx ctermfg=0 guifg=black
col_darkred    xxx ctermfg=4 guifg=darkred
col_darkgreen  xxx ctermfg=2 guifg=darkgreen
col_brown      xxx ctermfg=6 guifg=brown
col_darkblue   xxx ctermfg=1 guifg=darkblue
col_darkmagenta xxx ctermfg=5 guifg=darkmagenta
col_darkcyan   xxx ctermfg=3 guifg=darkcyan
col_lightgray  xxx ctermfg=7 guifg=lightgray
col_darkgray   xxx ctermfg=8 guifg=darkgray
col_red        xxx ctermfg=12 guifg=red
col_green      xxx ctermfg=10 guifg=green
col_yellow     xxx ctermfg=14 guifg=yellow
col_blue       xxx ctermfg=9 guifg=blue
col_magenta    xxx ctermfg=13 guifg=magenta
col_cyan       xxx ctermfg=11 guifg=cyan
col_white      xxx ctermfg=15 guifg=white
col_grey       xxx ctermfg=7 guifg=grey
col_lightred   xxx ctermfg=12 guifg=lightred
col_lightgreen xxx ctermfg=10 guifg=lightgreen
col_lightyellow xxx ctermfg=14 guifg=lightyellow
col_lightblue  xxx ctermfg=9 guifg=lightblue
col_lightmagenta xxx ctermfg=13 guifg=lightmagenta
col_lightcyan  xxx ctermfg=11 guifg=lightcyan
--- Variables ---
Tlist_Max_Submenu_Items #20
loaded_snips          #1
acp_enableAtStartup   #1
acp_behaviorHtmlOmniLength #0
Tlist_WinWidth        #30
did_load_filetypes    #1
acp_mappingDriven     #0
acp_behaviorKeywordLength #2
loaded_alternateFile  #1
Tlist_Enable_Fold_Column #1
loaded_vimballPlugin   v31
Tlist_Close_On_Select #0
EVMark_sort           #1
Tlist_Use_SingleClick #0
acp_behaviorFileLength #0
loaded_autoload_acp   #1
snips_author           Me
acp_behaviorCssOmniValueLength #0
Tlist_File_Fold_Auto_Close #0
Tlist_Auto_Open       #0
colors_name            notepad2
did_load_ftplugin     #1
loaded_acp            #1
Tlist_WinHeight       #10
Tlist_Show_One_File   #0
Tlist_Auto_Highlight_Tag #1
acp_behaviorSnipmateLength #-1
acp_ignorecaseOption  #1
loaded_vimcdoc        #1
Tlist_Auto_Update     #1
Tlist_Display_Tag_Scope #1
Tlist_Compact_Format  #0
html_use_css          #1
EVHelp_Version         1.0
loaded_spellfile_plugin #1
EVMenu_version         1.0
acp_behaviorPerlOmniLength #-1
i                      ]
EVMark_methodOfOpen     tabnew 
alternateSearchPath    sfr:../source,sfr:../src,sfr:../include,sfr:../inc
acp_behaviorUserDefinedFunction  
Tlist_Sort_Type        order
acp_behaviorKeywordCommand  ^N
acp_behaviorPythonOmniLength #0
syntax_on             #1
TagList_title          __Tag_List__
Tlist_Use_Horiz_Window #0
snippets_dir           $VIMRUNTIME/snippets
Tlist_Inc_Winwidth    #1
did_ft                {'txt': 1, 'vim': 1, '_': 1}
col1                   black
col2                   lightcyan
more_save             #1
alternateNoDefaultAlternate #0
acp_behaviorKeywordIgnores []
alternateRelativeFiles #0
Tlist_Exit_OnlyWindow #0
Tlist_Display_Prototype #0
Tlist_Ctags_Cmd        ctags
loaded_2html_plugin    vim7.3_v8
loaded_matchparen     #1
vimsyn_embed           lmpPr
acp_behaviorRubyOmniMethodLength #0
acp_behaviorRubyOmniSymbolLength #1
sep                    \
EVMark_version         1.0
paste#paste_cmd       {'v': '"-c<Esc>:call paste#Paste()<CR>', 'i': 'x<BS><Esc>:call paste#Paste()<CR>gi', 'n': ':call paste#Paste()<CR>'}
Tlist_Highlight_Tag_On_BufEnter #1
acp_behavior          {'xhtml': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForHtmlOmni', 'repeat': 1, 'command': '^X^O'}], 'perl': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForPerlOmni', 'repeat': 0, 'command': '^X^O'}], 'xml': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForXmlOmni', 'repeat': 1, 'command': '^X^O'}], 'html': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForHtmlOmni', 'repeat': 1, 'command': '^X^O'}], '*': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}], 'ruby': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForRubyOmni', 'repeat': 0, 'command': '^X^O'}], 'python': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForPythonOmni', 'repeat': 0, 'command': '^X^O'}], 'css': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForCssOmni', 'repeat': 0, 'command': '^X^O'}]}
acp_completeoptPreview #0
loaded_taglist         fast_load_done
Tlist_Show_Menu       #0
Tlist_Max_Tag_Length  #10
did_menu_trans        #1
acp_behaviorXmlOmniLength #0
Tlist_Use_Right_Window #0
acp_completeOption     .,w,b,k
Tlist_Process_File_Always #0
Tlist_GainFocus_On_ToggleOpen #0
acp_behaviorCssOmniPropertyLength #1
acp_behaviorUserDefinedMeets  
alternateExtensionsDict {'yacc': 'lex,l,lpp', 'C': 'H', 'H': 'C,CPP,CXX,CC', 'lpp': 'ypp,y,yacc', 'cpp': 'h,hpp', 'ml': 'mli', 'adb': 'ads', 'aspx.cs': 'aspx', 'aspx.vb': 'aspx', 'psl': 'ph', 'ph': 'psl', 'CXX': 'H', 'HPP': 'CPP,C', 'ads': 'adb', 'c': 'h', 'ypp': 'lpp,l,lex', 'h': 'c,cpp,cxx,cc,CC', 'aspx': 'aspx.cs,aspx.vb', 'mli': 'ml', 'CPP': 'H,HPP', 'l': 'y,yacc,ypp', 'cc': 'h', 'lex': 'yacc,y,ypp', 'hpp': 'cpp,c', 'CC': 'H,h', 'y': 'l,lex,lpp', 'cxx': 'h'}
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
EVFileExplore_version  1.0
b:undo_ftplugin        setl fo< isk< com< tw< commentstring<| unlet! b:match_ignorecase b:match_words b:match_skip
b:did_ftplugin        #1
b:this_buf_size       #3
b:changedtick         #2
w:paren_hl_on         #0
v:version             #703
v:beval_winnr         #0
v:lnum                #0
v:scrollstart          未知
v:oldfiles            ['C:\Program Files\Vim\_vimrc', 'C:\Program Files\Vim\vim73\doc\help.txt', 'E:\工作文档\winner\桌面资料\eventer细节.txt', 'C:\Program Files\Vim\vim73\doc\options.txt', '~\Desktop\src\keymap.h', '~\Desktop\src\gvim.exe.mnf', '~\Desktop\clewn-1.15\INSTALL', '~\Desktop\xpm-3.4k\README.MSW', '~\Desktop\xpm-3.4k\Makefile.noX', '~\Desktop\xpm-3.4k\Imakefile', '~\Desktop\clewn-1.15\configure', '~\Desktop\src\option.h', '~\Desktop\src\gui.h', '~\Desktop\src\fileio.c', '~\Desktop\src\ex_cmds.h', 'C:\Program Files\Vim\vim73\doc\index.txt', '~\Desktop\src\ex_eval.c', '~\Desktop\src\digraph.c', '~\Desktop\src\bigvim.bat', 'C:\Program Files\creamvim\vim73\cream\docs\TODO.txt', 'C:\Program Files\creamvim\vim73\cream\cream.vim', 'C:\Program Files\creamvim\vim73\cream\docs\KEYBOARD.txt', 'C:\Program Files\creamvim\vim73\cream\docs\CHANGELOG.txt', 'C:\Program Files\creamvim\vim73\cream\docs\WINDOWS.txt', 'C:\Program Files\creamvim\vim73\cream\docs\PressRelease.txt', 'C:\Program Files\creamvim\vim73\cream\docs\DEVELOPER.txt', 'C:\Program Files\creamvim\vim73\cream\help\EnhancedCommentify.txt', 'C:/Program Files/creamvim/vim73/bugreport.vim', 'C:\Program Files\creamvim\vim73\cream\lang\menu_zh_cn.utf-8.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu.vim', 'C:\Program Files\Vim\vim73\lang\menu_zh_cn.utf-8.vim', 'C:\Program Files\creamvim\vim73\menu.vim', 'C:\Program Files\creamvim\vim73\cream\cream-settings.vim', 'C:\Program Files\creamvim\vim73\cream\cream-keys.vim', 'C:\Program Files\creamvim\vim73\cream\docs\README.txt', 'C:\Program Files\creamvim\vim73\cream\cream-addon.vim', 'C:\Program Files\creamvim\vim73\cream\cream-abbr.vim', 'C:\Program Files\creamvim\vim73\cream\Rndm.vim', 'C:\Program Files\creamvim\vim73\cream\EnhancedCommentify.vim', 'C:\Program Files\creamvim\vim73\cream\creamrc', 'C:\Program Files\creamvim\vim73\cream\cream-lib.vim', 'C:\Program Files\creamvim\vim73\cream\cream-conf.example.vim', 'C:\Program Files\creamvim\vim73\cream\cream-capitalization.vim', 'C:\Program Files\creamvim\vim73\cream\cream-abbr-eng.vim', 'C:\Program Files\Vim\vim73\doc\map.txt', 'C:\Program Files\creamvim\vim73\makemenu.vim', 'C:\Program Files\creamvim\vim73\indent.vim', 'C:\Program Files\creamvim\vim73\filetype.vim', 'C:\Program Files\creamvim\vim73\mswin.vim', 'C:\Program Files\creamvim\_vimrc', 'C:\Program Files\creamvim\vim73\vimrc_example.vim', 'C:\Program Files\creamvim\vim73\gvimrc_example.vim', 'C:\Program Files\creamvim\vim73\cream\cream-server.vim', 'C:\Program Files\creamvim\vim73\cream\cream-ascii.vim', '~\.cream\tmp\vimrc_example.vim.~', '~\.cream\tmp\_vimrc.~', 'C:\Program Files\creamvim\vim73\cream\cream-lib-os.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu-window.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu-settings.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu-popup.vim', '~\Desktop\vim工作安排.txt', 'C:\Program Files\Vim\vim73\doc\tagsrch.txt', 'C:\Program Files\Vim\vim73\doc\tags', 'C:\Program Files\Vim\vim73\doc\workshop.txt', 'C:\Program Files\Vim\vim73\doc\develop.txt', 'C:\Program Files\Vim\vim73\doc\tags-cn', 'C:\Program Files\Vim\vim73\doc\workshop.cnx', 'C:\Program Files\Vim\vim73\keymap\pinyin.vim', 'C:\Program Files\Vim\vim73\doc\various.cnx', 'C:\Program Files\Vim\vim73\menu.vim', '~\Desktop\简繁字体表.txt', 'C:\Program Files\Vim\vim73\doc\eval.cnx', 'C:\Program Files\Vim\vimfiles\doc\eval.cnx', 'C:\Program Files\Vim\vim73\doc\eval.txt', 'E:\工作文档\winner\桌面资料\设计vim插件功能.txt', 'C:\Program Files\Vim\vimfiles\doc\autocmd.cnx', 'C:\Program Files\Vim\vimfiles\syntax\help_cn.vim', 'C:\Program Files\Vim\vimfiles\doc\help.cnx', 'C:\Program Files\creamvim\vim73\cream\cream-gui.vim', 'C:\Program Files\creamvim\vim73\lang\menu_zh_cn.utf-8.vim']
v:dying               #0
v:lang                 zh_CN.utf-8
v:count               #0
v:progname             gvim.exe
v:cmdbang             #0
v:foldlevel           #0
v:ctype                C
v:prevcount           #0
v:register             "
v:mouse_win           #0
v:count1              #1
v:foldstart           #0
v:foldend             #0
v:profiling           #0
v:beval_col           #0
v:beval_lnum          #0
v:mouse_lnum          #0
v:insertmode           i
v:beval_bufnr         #0
v:shell_error         #0
v:servername           GVIM
v:lc_time              Chinese (Simplified)_People's Republic of China.936
v:searchforward       #1
v:mouse_col           #0
v:statusmsg            找不到缩写

VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Aug 15 2010 15:14:24)
MS-Windows 32 位图形界面版本 带 OLE 支持
编译者 Bram@KIBAALE
大型版本 带图形界面。  可使用(+)与不可使用(-)的功能:
+arabic +autocmd +balloon_eval +browse ++builtin_terms +byte_offset +cindent +clientserver +clipboard +cmdline_compl 
+cmdline_hist +cmdline_info +comments +conceal +cryptv +cscope +cursorbind +cursorshape +dialog_con_gui +diff +digraphs
 -dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path +find_in_path +float +folding -footer 
+gettext/dyn -hangul_input +iconv/dyn +insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent 
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse +mouseshape +multi_byte_ime/dyn +multi_lang -mzscheme 
+netbeans_intg +ole -osfiletype +path_extra +perl/dyn +persistent_undo -postscript +printer -profile +python/dyn 
+python3/dyn +quickfix +reltime +rightleft +ruby/dyn +scrollbind +signs +smartindent -sniff +startuptime +statusline 
-sun_workshop +syntax +tag_binary +tag_old_static -tag_any_white +tcl/dyn -tgetent -termresponse +textobjects +title 
+toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo +vreplace +wildignore +wildmenu +windows 
+writebackup -xfontset -xim -xterm_save +xpm_w32 
     系统 vimrc 文件: "$VIM\vimrc"
     用户 vimrc 文件: "$HOME\_vimrc"
 第二用户 vimrc 文件: "$VIM\_vimrc"
      用户 exrc 文件: "$HOME\_exrc"
  第二用户 exrc 文件: "$VIM\_exrc"
    系统 gvimrc 文件: "$VIM\gvimrc"
    用户 gvimrc 文件: "$HOME\_gvimrc"
第二用户 gvimrc 文件: "$VIM\_gvimrc"
        系统菜单文件: "$VIMRUNTIME\menu.vim"
编译方式: cl -c /W3 /nologo  -I. -Iproto -DHAVE_PATHDEF -DWIN32   -DFEAT_CSCOPE -DFEAT_NETBEANS_INTG   -DFEAT_XPM_W32   -DWINVER=0x0400 -D_WIN32_WINNT=0x0400  /Fo.\ObjGOLYHTR/ /Ox /GL -DNDEBUG  /Zl /MT -DFEAT_OLE -DFEAT_MBYTE_IME -DDYNAMIC_IME -DFEAT_GUI_W32 -DDYNAMIC_ICONV -DDYNAMIC_GETTEXT -DFEAT_TCL -DDYNAMIC_TCL -DDYNAMIC_TCL_DLL=\"tcl83.dll\" -DDYNAMIC_TCL_VER=\"8.3\" -DFEAT_PYTHON -DDYNAMIC_PYTHON -DDYNAMIC_PYTHON_DLL=\"python27.dll\" -DFEAT_PYTHON3 -DDYNAMIC_PYTHON3 -DDYNAMIC_PYTHON3_DLL=\"python31.dll\" -DFEAT_PERL -DDYNAMIC_PERL -DDYNAMIC_PERL_DLL=\"perl512.dll\" -DFEAT_RUBY -DDYNAMIC_RUBY -DDYNAMIC_RUBY_VER=191 -DDYNAMIC_RUBY_DLL=\"msvcrt-ruby191.dll\" -DFEAT_BIG /Fd.\ObjGOLYHTR/ /Zi
链接方式: link /RELEASE /nologo /subsystem:windows /LTCG:STATUS oldnames.lib kernel32.lib advapi32.lib shell32.lib gdi32.lib  comdlg32.lib ole32.lib uuid.lib /machine:i386 /nodefaultlib gdi32.lib version.lib   winspool.lib comctl32.lib advapi32.lib shell32.lib  /machine:i386 /nodefaultlib libcmt.lib oleaut32.lib  user32.lib      /nodefaultlib:python27.lib /nodefaultlib:python31.lib   e:\tcl\lib\tclstub83.lib WSock32.lib e:\xpm\lib\libXpm.lib /PDB:gvim.pdb -debug
--- Directories and Files ---
$VIM = "C:\Program Files\Vim"
directory "C:\Program Files\Vim" exists
$VIMRUNTIME = "C:\Program Files\Vim\vim73"
directory "C:\Program Files\Vim\vim73" exists
"C:\Program Files\Vim\vim73\doc\help.txt" is readable
"C:\Program Files\Vim\vim73\doc/tags" is readable
"C:\Program Files\Vim\vim73/menu.vim" is readable
"C:\Program Files\Vim\vim73/filetype.vim" is readable
"C:\Program Files\Vim\vim73/syntax/synload.vim" is readable
--- Scripts sourced ---
  1: C:\Program Files\Vim\_vimrc
  2: C:\Program Files\Vim\vim73\colors\notepad2.vim
  3: C:\Program Files\Vim\vim73\mswin.vim
  4: C:\Program Files\Vim\vim73\autoload\paste.vim
  5: C:\Program Files\Vim\vim73\syntax\syntax.vim
  6: C:\Program Files\Vim\vim73\syntax\synload.vim
  7: C:\Program Files\Vim\vim73\syntax\syncolor.vim
  8: C:\Program Files\Vim\vim73\filetype.vim
  9: C:\Program Files\Vim\vim73\menu.vim
 10: C:\Program Files\Vim\vim73\lang\menu_zh_cn.utf-8.vim
 11: C:\Program Files\Vim\vim73\ftplugin.vim
 12: C:\Program Files\Vim\vim73\plugin\EVFileExplore.vim
 13: C:\Program Files\Vim\vim73\plugin\EVMark.vim
 14: C:\Program Files\Vim\vim73\plugin\a.vim
 15: C:\Program Files\Vim\vim73\plugin\acp.vim
 16: C:\Program Files\Vim\vim73\autoload\acp.vim
 17: C:\Program Files\Vim\vim73\plugin\g2b.vim
 18: C:\Program Files\Vim\vim73\plugin\matchparen.vim
 19: C:\Program Files\Vim\vim73\plugin\snipMate.vim
 20: C:\Program Files\Vim\vim73\plugin\spellfile.vim
 21: C:\Program Files\Vim\vim73\plugin\taglist.vim
 22: C:\Program Files\Vim\vim73\plugin\tohtml.vim
 23: C:\Program Files\Vim\vim73\plugin\vimballPlugin.vim
 24: C:\Program Files\Vim\vim73\plugin\vimcdoc.vim
 25: C:\Program Files\Vim\vim73\scripts.vim
 26: C:\Program Files\Vim\vim73\syntax\txt.vim
 27: C:\Program Files\Vim\vim73\autoload\EVHelp.vim
 28: C:\Program Files\Vim\vim73\syntax\help.vim
 29: C:\Program Files\Vim\vim73\ftplugin\help.vim
 30: C:\Program Files\Vim\vim73\syntax\vim.vim
 31: C:\Program Files\Vim\vim73\syntax\python.vim
 32: C:\Program Files\Vim\vim73\ftplugin\vim.vim
 33: C:\Program Files\Vim\vim73\syntax\colortest.vim
 34: C:\Program Files\Vim\vim73\bugreport.vim
--- 选项 ---
  aleph=224         nocscopetag           helplang=cn         modifiable        noshiftround          timeout
noarabic              cscopetagorder=0    hidden            nomodified            shiftwidth=4        timeoutlen=1000
  arabicshape       nocscopeverbose       history=30        nomore                shortmess=atIA      title
noallowrevins       nocursorbind        nohkmap               mouse=a           noshortname           titlelen=85
noaltkeymap         nocursorcolumn      nohkmapp            nomousefocus          showbreak=          titlestring=
  ambiwidth=double    cursorline          hlsearch            mousehide         noshowcmd           nottimeout
  autochdir           debug=              icon                mousemodel=popup  noshowfulltag         ttimeoutlen=-1
  autoindent        nodelcombine          iconstring=         mousetime=500       showmatch           ttybuiltin
noautoread            dictionary=         ignorecase          number            noshowmode          nottyfast
noautowrite         nodiff                imcmdline           numberwidth=4       showtabline=1       ttyscroll=999
noautowriteall        diffexpr=MyDiff() noimdisable           omnifunc=           sidescroll=0        undodir=.
  background=light    diffopt=filler      iminsert=2        noopendevice          sidescrolloff=0   noundofile
nobackup            nodigraph             imsearch=2          operatorfunc=       smartcase           undolevels=1000
  backupcopy=auto     display=            includeexpr=      nopaste               smartindent         undoreload=10000
  backupext=~         eadirection=both    incsearch           pastetoggle=      nosmarttab            updatecount=200
  balloondelay=600  noedcompatible        indentexpr=         patchexpr=          softtabstop=4       updatetime=4000
noballooneval         encoding=utf-8    noinfercase           patchmode=        nospell               verbose=0
  balloonexpr=        endofline           insertmode          path=.,,            spellcapcheck=      verbosefile=
nobinary              equalalways         isprint=@,~-255   nopreserveindent      spellfile=          virtualedit=block
nobomb                equalprg=           joinspaces          previewheight=12    spellsuggest=best novisualbell
  browsedir=        noerrorbells          key=              nopreviewwindow     nosplitbelow          warn
  bufhidden=          esckeys             keymap=             printdevice=      nosplitright        noweirdinvert
  buflisted           eventignore=        keywordprg=:help    printoptions=       startofline         wildchar=<Tab>
  buftype=            expandtab           langmap=            prompt              suffixesadd=        wildcharm=0
  cdpath=,,         noexrc                langmenu=           pumheight=0         swapfile            wildignore=
  cedit=^F            fileformat=dos      laststatus=2        quoteescape=\       swapsync=fsync      wildmenu
  charconvert=        filetype=vim      nolazyredraw        noreadonly            switchbuf=          wildmode=full
  cindent           nofkmap             nolinebreak           redrawtime=2000     synmaxcol=3000      wildoptions=
  cinoptions=         foldclose=          lines=32          norelativenumber      syntax=vim          winaltkeys=menu
  clipboard=          foldcolumn=1        linespace=4         remap               tabline=            window=31
  cmdheight=1         foldenable        nolisp                report=0            tabpagemax=10       winheight=1
  cmdwinheight=7      foldexpr=0        nolist                restorescreen       tabstop=4         nowinfixheight
  colorcolumn=        foldignore=#        listchars=eol:$   norevins              tagbsearch        nowinfixwidth
  columns=120         foldlevel=0         loadplugins       norightleft           taglength=0         winminheight=1
  commentstring="%s   foldlevelstart=-1   magic             noruler               tagrelative         winminwidth=1
nocompatible          foldmethod=manual   makeef=             rulerformat=        tags=./tags,tags    winwidth=20
  concealcursor=      foldminlines=1      makeprg=make        scroll=5            tagstack          nowrap
  conceallevel=0      foldnestmax=20      matchtime=2       noscrollbind          term=builtin_gui    wrapmargin=0
  completefunc=       formatexpr=         maxcombine=2        scrolljump=1      notermbidi            wrapscan
  confirm             formatprg=          maxfuncdepth=100    scrolloff=0         termencoding=       write
nocopyindent        nogdefault            maxmapdepth=1000  nosecure            noterse             nowriteany
  cpoptions=aABceFs   guifontwide=        maxmem=1796222      shellcmdflag=/c     textauto            writebackup
  cryptmethod=zip     guipty              maxmemtot=1796222   shellquote=         textmode            writedelay=0
  cscopepathcomp=0    guitablabel=%t      menuitems=25      noshellslash          textwidth=78
  cscopeprg=cscope    guitabtooltip=%F    modeline            shelltemp           thesaurus=
  cscopequickfix=     helpheight=20       modelines=5         shellxquote=      notildeop
  backspace=indent,eol,start
  backupdir=.,c:\tmp,c:\temp
  backupskip=C:\Users\hesheng\AppData\Local\Temp\*,C:\Users\hesheng\AppData\Local\Temp\*
  breakat= ^I!@*-+;:,./?
  casemap=internal,keepascii
  cinkeys=0{,0},0),:,0#,!^F,o,O,e
  cinwords=if,else,while,do,for,switch
  comments=sO:" -,mO:"  ,eO:"",:"
  complete=.,w,b,u,t,i
  completeopt=menu,preview
  define=^\s*#\s*define
  directory=.,c:\tmp,c:\temp
  errorfile=errors.err
  errorformat=%f(%l) : %t%*\D%n: %m,%*[^"]"%f"%*\D%l: %m,%f(%l) : %m,%*[^ ] %f %l: %m,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,%f|%l| %m
  fileencoding=utf-8
  fileencodings=ucs-bom,utf-8,gb2312,GBK,default,chinese,big5
  fileformats=dos,mac
  fillchars=vert: ,stl: ,stlnc: 
  foldmarker={{{,}}}
  foldopen=block,hor,mark,percent,quickfix,search,tag,undo
  foldtext=foldtext()
  formatoptions=2nmMcroql
  formatlistpat=^\s*\d\+[\]:.)}\t ]\s*
  grepformat=%f:%l:%m,%f:%l%m,%f  %l%m
  grepprg=findstr /n
  guicursor=n-v-c:block-Cursor/lCursor,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175
  guifont=Consolas:h10:cANSI
  guioptions=gmrLTeb
  helpfile=C:\Program Files\Vim\vim73\doc\help.txt
  highlight=8:SpecialKey,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn
  include=^\s*#\s*include
  indentkeys=0{,0},:,0#,!^F,o,O,e
  isfname=@,48-57,/,\,.,-,_,+,,,#,$,%,{,},[,],:,@-@,!,~,=
  isident=@,48-57,_,128-167,224-235
  iskeyword=@,48-57,_,128-167,224-235,_,$,@,%,#,-
  keymodel=startsel,stopsel
  lispwords=defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object
  matchpairs=(:),{:},[:]
  maxmempattern=1000
  mkspellmem=460000,2000,500
  mouseshape=i-r:beam,s:updown,sd:udsizing,vs:leftright,vd:lrsizing,m:no,ml:up-arrow,v:rightup-arrow
  nrformats=octal,hex
  paragraphs=IPLPPPQPP TPHPLIPpLpItpplpipbp
  printfont=Courier_New:h10
  printheader=%<%f%h%m%=Page %N
  rightleftcmd=search
  runtimepath=~/vimfiles,C:\Program Files\Vim/vimfiles,C:\Program Files\Vim\vim73,C:\Program Files\Vim/vimfiles/after,~/vimfiles/after
  scrollopt=ver,jump
  sections=SHNHH HUnhsh
  selection=exclusive
  selectmode=mouse,key
  sessionoptions=blank,buffers,curdir,folds,help,options,tabpages,winsize
  shell=C:\Windows\system32\cmd.exe
  shellpipe=>%s 2>&1
  shellredir=>%s 2>&1
  spelllang=en_us,en
  statusline=%< %14{b:this_buf_size}KB %14{&ff} %14{&fileencoding} %14(Line:%l~%L%) %14(column:%v%) %14p%%
  suffixes=.bak,~,.o,.h,.info,.swp,.obj
  titleold=Thanks for flying Vim
  ttytype=builtin_gui
  viewdir=C:\Program Files\Vim/vimfiles/view
  viewoptions=folds,options,cursor,slash
  viminfo='100,<50,s10,h,rA:,rB:,!
  whichwrap=b,s,<,>,[,]
--- 终端编码 ---
  t_AB=               t_Co=               t_fs=               t_mr=^[|1h          t_so=^[|16h         t_vi=
  t_AF=               t_CS=               t_IE=               t_ms=y              t_sr=               t_vs=
  t_AL=^[|%dI         t_cs=^[|%d;%dR      t_IS=               t_nd=^L             t_ts=               t_WP=
  t_al=^[|i           t_CV=^[|%d;%dV      t_ke=               t_op=               t_te=               t_WS=
  t_bc=               t_ut=y              t_ks=               t_RI=               t_ti=               t_SI=
  t_cd=               t_da=               t_le=^H             t_RV=               t_ue=^[|8H          t_EI=
  t_ce=^[|$           t_db=               t_mb=               t_Sb=               t_us=^[|8h          t_xs=
  t_cl=^[|C           t_DL=^[|%dD         t_md=^[|2h          t_Sf=               t_vb=^[|f           t_ZH=^[|4h
  t_cm=^[|%d;%dM      t_dl=^[|d           t_me=^[|31H         t_se=^[|16H         t_ve=               t_ZR=^[|4H
--- 终端按键 ---
     <Mouse>     <9b>M
--- 自动命令 ---
filetypedetect  BufEnter
    *.xpm     if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
    *.xpm2    setf xpm2
BufEnter
    *         let b:this_buf_size=getfsize(bufname("%"))/1024
    *.vba     setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.gz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.bz2 setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.zip setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'| setlocal ma ff=unix noma |endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
BufFilePost
    __Tag_List__
              call s:Tlist_Vim_Session_Load()
filetypedetect  BufNewFile
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    etc/a2ps.cfg
              setf a2ps
    etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    /etc/httpd/*.conf
              setf apache
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    /etc/apache2/*.conf*
              call s:StarSetf('apache')
    /etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    C:/Users/hesheng/.asoundrc
              setf alsaconf
    /usr/share/alsa/alsa.conf
              setf alsaconf
    /etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    /boot/grub/menu.lst
              setf grub
    /boot/grub/grub.conf
              setf grub
    /etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    /etc/blkid.tab
              setf xml
    /etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    *.cs      setf cs
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    etc/cdrdao.conf
              setf cdrdaoconf
    etc/defaults/cdrdao
              setf cdrdaoconf
    etc/default/cdrdao
              setf cdrdaoconf
    C:/Users/hesheng/.cdrdao
              setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    C:/Users/hesheng/.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    /etc/apt/sources.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    /etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/**  if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    /usr/**/gnupg/options.skel
              setf gpg
    *.gpi     setf gnuplot
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    /etc/group
              setf group
    /etc/group-
              setf group
    /etc/group.edit
              setf group
    /etc/gshadow
              setf group
    /etc/gshadow-
              setf group
    /etc/gshadow.edit
              setf group
    /var/backups/group.bak
              setf group
    /var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    /etc/host.conf
              setf hostconf
    /etc/hosts.allow
              setf hostsaccess
    /etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    /etc/initng/**/*.i
              setf initng
    *.ii      setf initng
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.kix     setf kix
    *.k       setf kwt
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    /etc/limits
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    /etc/libao.conf
              setf libao
    */.libao  setf libao
    /etc/sensors.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf*
              call s:StarSetf('lilo')
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    /etc/login.access
              setf loginaccess
    /etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    /etc/mail/aliases
              setf mailaliases
    /etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.man     setf man
    /etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    *.hgrc    setf cfg
    *hgrc     setf cfg
    /var/log/messages
              setf messages
    /var/log/messages.*[0-9]
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    /etc/modules.conf
              setf modconf
    /etc/conf.modules
              setf modconf
    /etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    *.rc      setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    /etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    /etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    /etc/passwd
              setf passwd
    /etc/passwd-
              setf passwd
    /etc/passwd.edit
              setf passwd
    /etc/shadow
              setf passwd
    /etc/shadow-
              setf passwd
    /var/backups/passwd.bak
              setf passwd
    /var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    /etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rexx    setf rexx
    *.rex     setf rexx
    *.jrexx   setf rexx
    *.rxj     setf rexx
    *.orx     setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders*
              call s:StarSetf('remind')
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gem     setf ruby
    *.gemspec setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    /etc/services
              setf services
    /etc/slp.conf
              setf slpconf
    /etc/slp.reg
              setf slpreg
    /etc/slp.spi
              setf slpspi
    /etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    /etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    /etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    /etc/sysctl.conf
              setf sysctl
    *.sdc     setf sdc
    /etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.uit     setf uil
    *.uil     setf uil
    /etc/udev/udev.conf
              setf udevconf
    /etc/udev/permissions.d/*.permissions
              setf udevperm
    /etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    /etc/updatedb.conf
              setf updatedb
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86c_xfree86_version = 3 | endif | setf xf86conf
    xorg.conf let b:xf86c_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86c_xfree86_version = 4 | setf xf86conf
    /etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    /etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    /etc/apache2/conf.*/*
              call s:StarSetf('apache')
    /etc/apache2/sites-*/*
              call s:StarSetf('apache')
    /etc/apache2/mods-*/*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    /etc/cron.d/*
              call s:StarSetf('crontab')
    /etc/apt/sources.list.d/*
              call s:StarSetf('debsources')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    /tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    /etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\{6\}
              setf mail
    /etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86c_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86c_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    /etc/xinetd.d/*
              call s:StarSetf('xinetd')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
BufNewFile
    *.txt     setlocal ft=txt 
    *.snippets\=
              set ft=snippet
filetypedetect  BufRead
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    etc/a2ps.cfg
              setf a2ps
    etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    /etc/httpd/*.conf
              setf apache
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    /etc/apache2/*.conf*
              call s:StarSetf('apache')
    /etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    C:/Users/hesheng/.asoundrc
              setf alsaconf
    /usr/share/alsa/alsa.conf
              setf alsaconf
    /etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    /boot/grub/menu.lst
              setf grub
    /boot/grub/grub.conf
              setf grub
    /etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    /etc/blkid.tab
              setf xml
    /etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    *.cs      setf cs
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    etc/cdrdao.conf
              setf cdrdaoconf
    etc/defaults/cdrdao
              setf cdrdaoconf
    etc/default/cdrdao
              setf cdrdaoconf
    C:/Users/hesheng/.cdrdao
              setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    C:/Users/hesheng/.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    /etc/apt/sources.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    /etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/**  if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    /usr/**/gnupg/options.skel
              setf gpg
    *.gpi     setf gnuplot
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    /etc/group
              setf group
    /etc/group-
              setf group
    /etc/group.edit
              setf group
    /etc/gshadow
              setf group
    /etc/gshadow-
              setf group
    /etc/gshadow.edit
              setf group
    /var/backups/group.bak
              setf group
    /var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    /etc/host.conf
              setf hostconf
    /etc/hosts.allow
              setf hostsaccess
    /etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    /etc/initng/**/*.i
              setf initng
    *.ii      setf initng
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.kix     setf kix
    *.k       setf kwt
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    /etc/limits
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    /etc/libao.conf
              setf libao
    */.libao  setf libao
    /etc/sensors.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf*
              call s:StarSetf('lilo')
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    /etc/login.access
              setf loginaccess
    /etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    /etc/mail/aliases
              setf mailaliases
    /etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.man     setf man
    /etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    *.hgrc    setf cfg
    *hgrc     setf cfg
    /var/log/messages
              setf messages
    /var/log/messages.*[0-9]
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    /etc/modules.conf
              setf modconf
    /etc/conf.modules
              setf modconf
    /etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    *.rc      setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    /etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    /etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    /etc/passwd
              setf passwd
    /etc/passwd-
              setf passwd
    /etc/passwd.edit
              setf passwd
    /etc/shadow
              setf passwd
    /etc/shadow-
              setf passwd
    /var/backups/passwd.bak
              setf passwd
    /var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    /etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rexx    setf rexx
    *.rex     setf rexx
    *.jrexx   setf rexx
    *.rxj     setf rexx
    *.orx     setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders*
              call s:StarSetf('remind')
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gem     setf ruby
    *.gemspec setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    /etc/services
              setf services
    /etc/slp.conf
              setf slpconf
    /etc/slp.reg
              setf slpreg
    /etc/slp.spi
              setf slpspi
    /etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    /etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    /etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    /etc/sysctl.conf
              setf sysctl
    *.sdc     setf sdc
    /etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.uit     setf uil
    *.uil     setf uil
    /etc/udev/udev.conf
              setf udevconf
    /etc/udev/permissions.d/*.permissions
              setf udevperm
    /etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    /etc/updatedb.conf
              setf updatedb
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86c_xfree86_version = 3 | endif | setf xf86conf
    xorg.conf let b:xf86c_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86c_xfree86_version = 4 | setf xf86conf
    /etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    /etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    /etc/apache2/conf.*/*
              call s:StarSetf('apache')
    /etc/apache2/sites-*/*
              call s:StarSetf('apache')
    /etc/apache2/mods-*/*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    /etc/cron.d/*
              call s:StarSetf('crontab')
    /etc/apt/sources.list.d/*
              call s:StarSetf('debsources')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    /tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    /etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\{6\}
              setf mail
    /etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86c_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86c_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    /etc/xinetd.d/*
              call s:StarSetf('xinetd')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
BufRead
    *.txt     setlocal ft=txt 
    *.snippets\=
              set ft=snippet
syntaxset  FileType
    *         exe "set syntax=" . expand("<amatch>")
filetypeplugin  FileType
    *         call s:LoadFTPlugin()
FileType
    snippet   setl noet fdm=indent
    *         if &ft != 'help' | call GetSnippets(snippets_dir, &ft) | endif
AcpGlobalAutoCommand  InsertEnter
    *         unlet! s:posLast s:lastUncompletable
AcpGlobalAutoCommand  InsertLeave
    *         call s:finishPopup(1)
MenuPopup
    *         call s:PopupDeleteMark()
filetypedetect  StdinReadPost
    *         if !did_filetype() | runtime! scripts.vim | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
Syntax
    *         call s:SynSet()
    c         if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cpp       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cs        if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    idl       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
VimEnter
    *         call EVOldFiles()   
matchparen  WinEnter
    *         call s:Highlight_Matching_Pair()
FuncUndefined
    *21_Tlist_*
              source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    *21_Tlist_Window_*
              source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    *21_Tlist_Menu_*
              source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    Tlist_*   source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
    TagList_* source C:\Program\ Files\Vim\vim73\plugin\taglist.vim
SourceCmd
    *.vba.gz  call vimball#Decompress(expand("<amatch>"))|call vimball#Vimball(1)
    *.vba.bz2 call vimball#Decompress(expand("<amatch>"))|call vimball#Vimball(1)
    *.vba.zip call vimball#Decompress(expand("<amatch>"))|call vimball#Vimball(1)
SpellFileMissing
    *         call spellfile#LoadFile(expand('<amatch>'))
matchparen  CursorMoved
    *         call s:Highlight_Matching_Pair()
AcpGlobalAutoCommand  CursorMovedI
    *         call s:feedPopup()
matchparen  CursorMovedI
    *         call s:Highlight_Matching_Pair()
--- Normal/Visual mode mappings ---
v  ["          *@:<C-U>exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
n  ["          *@:call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
v  []          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "bW")<CR>
n  []          *@m':call search('^\s*endf*\%[unction]\>', "bW")<CR>
v  [[          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "bW")<CR>
n  [[          *@m':call search('^\s*fu\%[nction]\>', "bW")<CR>
v  ]"          *@:<C-U>exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
n  ]"          *@:call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
v  ][          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "W")<CR>
n  ][          *@m':call search('^\s*endf*\%[unction]\>', "W")<CR>
v  ]]          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "W")<CR>
n  ]]          *@m':call search('^\s*fu\%[nction]\>', "W")<CR>
x  <C-A>       * <C-C>ggVG
s  <C-A>       * <C-C>gggH<C-O>G
o  <C-A>       * <C-C>gggH<C-O>G
n  <C-A>       * gggH<C-O>G
v  <C-C>       * "+y
s  <Tab>       * <Esc>i<Right><C-R>=TriggerSnippet()<CR>
   <C-Q>       * <C-V>
v  <C-S>       * <C-C>:update<CR>
no <C-S>       * :update<CR>
v  <C-V>       & "-c<Esc>:call paste#Paste()<CR>
no <C-V>         "+gP
n  <C-W><C-W>  * :new<CR><Esc>
n  <C-W>       * :close<CR><Esc>
v  <C-X>       * "+x
   <C-Y>       * <C-R>
   <C-Z>       * u
x  20.70       * &Edit.Copy&All <C-C>ggVG
s  20.70       * &Edit.Copy&All <C-C>gggH<C-O>G
o  20.70       * &Edit.Copy&All <C-C>gggH<C-O>G
n  R           * R<C-R>=<SNR>16_feedPopup()<CR>
n  \ihn          :IHN<CR>
n  \is           :IHS<CR>:A<CR>
n  \ih           :IHS<CR>
n  a           * a<C-R>=<SNR>16_feedPopup()<CR>
n  i           * i<C-R>=<SNR>16_feedPopup()<CR>
s  <S-Tab>     * <Esc>i<Right><C-R>=BackwardsSnippet()<CR>
   <F7>        * :call EVComments#Init(1)<CR>
   <F1>        * :call EVHelp#EVHelp(1)<CR>
o  <C-F4>      * <C-C><C-W>c
nv <C-F4>      * <C-W>c
o  <C-Tab>     * <C-C><C-W>w
nv <C-Tab>     * <C-W>w
   <M-Space>   * :simalt ~<CR>
v  <S-Insert>    <C-V>
v  <BS>        * d
v  <C-Del>       "*d
v  <S-Del>     * "+x
v  <C-Insert>  * "+y
no <S-Insert>    "+gP
--- Insert/Command-line mode mappings ---
i  <S-Tab>     * <C-R>=BackwardsSnippet()<CR>
i  <F5>        * <C-O>:call B2G()<CR>
i  <F6>        * <C-O>:call G2B()<CR>
!  <F7>        * <C-L>:call EVComments#Init(0)<CR>
!  <F1>        * <C-L>:call EVHelp#EVHelp(0)<CR>
c  <C-F4>      * <C-C><C-W>c
i  <C-F4>      * <C-O><C-W>c
c  <C-Tab>     * <C-C><C-W>w
i  <C-Tab>     * <C-O><C-W>w
c  <M-Space>   * <C-C>:simalt ~<CR>
i  <M-Space>   * <C-O>:simalt ~<CR>
c  <S-Insert>    <C-R>+
i  <S-Insert>    <C-V>
!  »           * <C-L>:
c  <C-A>       * <C-C>gggH<C-O>G
i  <C-A>       * <C-O>gg<C-O>gH<C-O>G
i  <Tab>       * <C-R>=TriggerSnippet()<CR>
i  <C-R><Tab>  * <C-R>=ShowAvailableSnips()<CR>
i  <C-S>       * <C-O>:update<CR>
!  <C-T>       * <C-L><C-T><Esc>
i  <C-V>       & x<BS><Esc>:call paste#Paste()<CR>gi
c  <C-V>         <C-R>+
i  <C-W><C-W>  * <C-L>:new<CR><Esc>
i  <C-W>       * <C-L>:close<CR><Esc>
i  <C-Y>       * <C-O><C-R>
i  <C-Z>       * <C-O>u
i  <Esc>         <C-L>
i  (           * ()<Left>
i  )           * ()<Left>
i  [           * []<Left>
i  \ihn          <Esc>:IHN<CR>
i  \is           <Esc>:IHS<CR>:A<CR>
i  \ih           <Esc>:IHS<CR>
i  ]           * []<Left>
i  {           * {}<Left>
i  }           * {}<Left>
--- Abbreviations ---

找不到缩写
--- Highlighting ---
SpecialKey     xxx term=bold ctermfg=1 guifg=Blue
NonText        xxx term=bold ctermfg=231 ctermbg=231 gui=bold guifg=#ffffff guibg=#ffffff
Directory      xxx term=bold ctermfg=1 guifg=Blue
ErrorMsg       xxx term=standout ctermfg=196 ctermbg=231 guifg=#fe0404 guibg=#ffffff
IncSearch      xxx term=reverse cterm=reverse ctermfg=95 ctermbg=231 gui=reverse guifg=#907070 guibg=#ffffff
Search         xxx term=reverse ctermfg=88 ctermbg=253 guifg=#800000 guibg=#e0dfe3
MoreMsg        xxx term=bold ctermfg=2 gui=bold guifg=SeaGreen
ModeMsg        xxx term=bold cterm=bold gui=bold
LineNr         xxx term=underline ctermfg=196 ctermbg=254 guifg=#f73600 guibg=#f0f0f0
Question       xxx term=standout ctermfg=2 gui=bold guifg=SeaGreen
StatusLine     xxx term=bold,reverse cterm=bold,reverse ctermfg=254 ctermbg=16 gui=bold,reverse guifg=#f0f0f0
                   guibg=#323200
StatusLineNC   xxx term=reverse cterm=reverse ctermfg=254 ctermbg=16 gui=reverse guifg=#f0f0f0 guibg=#262a2b
VertSplit      xxx term=reverse cterm=reverse ctermfg=254 ctermbg=16 gui=reverse guifg=#f0f0f0 guibg=#262a2b
Title          xxx term=bold ctermfg=16 gui=bold guifg=#000000
Visual         xxx term=reverse cterm=reverse ctermbg=146 guibg=#a3adc7
VisualNOS      xxx term=bold,underline cterm=bold,underline gui=bold,underline
WarningMsg     xxx term=standout ctermfg=4 guifg=Red
WildMenu       xxx term=standout ctermfg=0 ctermbg=14 guifg=Black guibg=Yellow
Folded         xxx term=standout ctermfg=31 ctermbg=254 guifg=#3c78a2 guibg=#f0f0f0
FoldColumn     xxx term=standout ctermfg=1 ctermbg=7 guifg=DarkBlue guibg=Grey
DiffAdd        xxx term=bold ctermbg=9 guibg=LightBlue
DiffChange     xxx term=bold ctermbg=13 guibg=LightMagenta
DiffDelete     xxx term=bold ctermfg=9 ctermbg=11 gui=bold guifg=Blue guibg=LightCyan
DiffText       xxx term=reverse cterm=bold ctermbg=12 gui=bold guibg=Red
SignColumn     xxx term=standout ctermfg=1 ctermbg=7 guifg=DarkBlue guibg=Grey
Conceal        xxx ctermfg=7 ctermbg=8 guifg=LightGrey guibg=DarkGrey
SpellBad       xxx term=reverse ctermbg=12 gui=undercurl guisp=Red
SpellCap       xxx term=reverse ctermbg=9 gui=undercurl guisp=Blue
SpellRare      xxx term=reverse ctermbg=13 gui=undercurl guisp=Magenta
SpellLocal     xxx term=underline ctermbg=11 gui=undercurl guisp=DarkCyan
Pmenu          xxx ctermfg=231 ctermbg=160 guifg=#ffffff guibg=#cb2f27
PmenuSel       xxx ctermbg=7 guibg=Grey
PmenuSbar      xxx ctermbg=7 guibg=Grey
PmenuThumb     xxx cterm=reverse gui=reverse
TabLine        xxx term=underline cterm=underline ctermfg=0 ctermbg=7 gui=underline guibg=LightGrey
TabLineSel     xxx term=bold cterm=bold gui=bold
TabLineFill    xxx term=reverse cterm=reverse gui=reverse
CursorColumn   xxx term=reverse ctermbg=7 guibg=Grey90
CursorLine     xxx term=underline cterm=underline ctermbg=230 guibg=#ffffcd
ColorColumn    xxx term=reverse ctermbg=12 guibg=LightRed
Cursor         xxx ctermfg=196 ctermbg=16 guifg=#fe0404 guibg=#000000
lCursor        xxx guifg=bg guibg=fg
MatchParen     xxx term=reverse cterm=bold ctermfg=196 ctermbg=231 gui=bold guifg=#fe0404 guibg=#ffffff
Normal         xxx ctermfg=16 ctermbg=231 guifg=#000000 guibg=#ffffff font=Consolas:h10:cANSI
Todo           xxx term=standout ctermfg=160 ctermbg=194 guifg=#e50808 guibg=#dbf3cd
Special        xxx term=bold ctermfg=16 guifg=#000000
String         xxx ctermfg=29 guifg=#0e9a4d
Constant       xxx term=underline ctermfg=32 guifg=#0086d2
Number         xxx ctermfg=196 guifg=#ff0036
Statement      xxx term=bold ctermfg=88 gui=bold guifg=#804000
Function       xxx ctermfg=88 guifg=#804000
PreProc        xxx term=underline ctermfg=196 guifg=#ff0007
Comment        xxx term=bold ctermfg=208 guifg=#ff8000
Type           xxx term=underline ctermfg=18 gui=bold guifg=#010180
Error          xxx term=reverse ctermfg=231 ctermbg=160 guifg=#ffffff guibg=#d40000
Identifier     xxx term=underline ctermfg=18 guifg=#010180
Label          xxx ctermfg=198 guifg=#ff0086
Underlined     xxx term=underline cterm=underline ctermfg=5 gui=underline guifg=SlateBlue
Ignore         xxx ctermfg=15 guifg=bg
Character      xxx links to Constant
Boolean        xxx links to Constant
Float          xxx links to Number
Conditional    xxx links to Statement
Repeat         xxx links to Statement
Operator       xxx links to Statement
Keyword        xxx links to Statement
Exception      xxx links to Statement
Include        xxx links to PreProc
Define         xxx links to PreProc
Macro          xxx links to PreProc
PreCondit      xxx links to PreProc
StorageClass   xxx links to Type
Structure      xxx links to Type
Typedef        xxx links to Type
Tag            xxx links to Special
SpecialChar    xxx links to Special
Delimiter      xxx links to Special
SpecialComment xxx links to Special
Debug          xxx links to Special
txtTodo        xxx links to Todo
txtError       xxx links to ErrorMsg
txtComment     xxx links to Special
txtTitle       xxx links to Title
txtList        xxx links to SignColumn
txtUrl         xxx links to Underlined
txtReference   xxx links to DiffAdd
txtApostrophe  xxx links to MoreMsg
txtQuotes      xxx links to MoreMsg
txtParentesis  xxx links to Special
txtBrackets    xxx links to Special
txtEmailMsg    xxx links to Structure
helpHeadline   xxx links to Statement
helpSectionDelim xxx links to PreProc
helpIgnore     xxx links to Ignore
helpExample    xxx links to Comment
helpBar        xxx links to Ignore
helpStar       xxx links to Ignore
helpHyperTextJump xxx links to Subtitle
helpHyperTextEntry xxx links to String
helpNormal     xxx cleared
helpVim        xxx links to Identifier
helpOption     xxx links to Type
helpHeader     xxx links to PreProc
helpGraphic    xxx cleared
helpNote       xxx links to Todo
helpSpecial    xxx links to Special
helpLeadBlank  xxx cleared
helpNotVi      xxx links to Special
helpComment    xxx links to Comment
helpConstant   xxx links to Constant
helpString     xxx links to String
helpCharacter  xxx links to Character
helpNumber     xxx links to Number
helpBoolean    xxx links to Boolean
helpFloat      xxx links to Float
helpIdentifier xxx links to Identifier
helpFunction   xxx links to Function
helpStatement  xxx links to Statement
helpConditional xxx links to Conditional
helpRepeat     xxx links to Repeat
helpLabel      xxx links to Label
helpOperator   xxx links to Operator
helpKeyword    xxx links to Keyword
helpException  xxx links to Exception
helpPreProc    xxx links to PreProc
helpInclude    xxx links to Include
helpDefine     xxx links to Define
helpMacro      xxx links to Macro
helpPreCondit  xxx links to PreCondit
helpType       xxx links to Type
helpStorageClass xxx links to StorageClass
helpStructure  xxx links to Structure
helpTypedef    xxx links to Typedef
helpSpecialChar xxx links to SpecialChar
helpTag        xxx links to Tag
helpDelimiter  xxx links to Delimiter
helpSpecialComment xxx links to SpecialComment
helpDebug      xxx links to Debug
helpUnderlined xxx links to Underlined
helpError      xxx links to Error
helpTodo       xxx links to Todo
helpURL        xxx links to String
Subtitle       xxx links to Identifier
vimTodo        xxx links to Todo
vimCommand     xxx links to Statement
vimOption      xxx links to PreProc
vimErrSetting  xxx links to vimError
vimAutoEvent   xxx links to Type
vimGroup       xxx links to Type
vimHLGroup     xxx links to vimGroup
vimFuncName    xxx links to Function
vimNumber      xxx links to Number
vimAddress     xxx links to vimMark
vimAutoCmd     xxx links to vimCommand
vimExtCmd      xxx cleared
vimFilter      xxx cleared
vimLet         xxx links to vimCommand
vimMap         xxx links to vimCommand
vimMark        xxx links to Number
vimSet         xxx cleared
vimSyntax      xxx links to vimCommand
vimUserCmd     xxx cleared
vimCmdSep      xxx cleared
vimIsCommand   xxx cleared
vimVar         xxx cleared
vimFBVar       xxx cleared
vimInsert      xxx links to vimString
vimBehaveModel xxx links to vimBehave
vimBehaveError xxx links to vimError
vimBehave      xxx links to vimCommand
vimFTCmd       xxx links to vimCommand
vimFTOption    xxx links to vimSynType
vimFTError     xxx links to vimError
vimFiletype    xxx cleared
vimFunction    xxx cleared
vimFunctionError xxx links to vimError
vimLineComment xxx links to vimComment
vimSpecFile    xxx links to Identifier
vimOper        xxx links to Operator
vimOperParen   xxx cleared
vimComment     xxx links to Comment
vimString      xxx links to String
vimSubst       xxx links to vimCommand
vimRegister    xxx links to SpecialChar
vimCmplxRepeat xxx links to SpecialChar
vimRegion      xxx cleared
vimSynLine     xxx cleared
vimNotation    xxx links to Special
vimCtrlChar    xxx links to SpecialChar
vimFuncVar     xxx links to Identifier
vimContinue    xxx links to Special
vimAugroupKey  xxx links to vimCommand
vimAugroup     xxx cleared
vimAugroupError xxx cleared
vimFunc        xxx links to vimError
vimParenSep    xxx links to Delimiter
vimSep         xxx links to Delimiter
vimOperError   xxx links to Error
vimFuncKey     xxx links to vimCommand
vimFuncSID     xxx links to Special
vimAbb         xxx links to vimCommand
vimEcho        xxx cleared
vimEchoHL      xxx links to vimCommand
vimExecute     xxx cleared
vimIf          xxx cleared
vimHighlight   xxx links to vimCommand
vimNorm        xxx links to vimCommand
vimNotFunc     xxx links to vimCommand
vimUserCommand xxx links to vimCommand
vimFuncBody    xxx cleared
vimFuncBlank   xxx cleared
vimPattern     xxx links to Type
vimSpecFileMod xxx links to vimSpecFile
vimEscapeBrace xxx cleared
vimSetEqual    xxx cleared
vimSetString   xxx links to vimString
vimSubstRep    xxx cleared
vimSubstRange  xxx cleared
vimUserAttrb   xxx links to vimSpecial
vimUserAttrbKey xxx links to vimOption
vimUserAttrbCmplt xxx links to vimSpecial
vimUserCmdError xxx links to Error
vimUserAttrbCmpltFunc xxx links to Special
vimCommentString xxx links to vimString
vimEnvvar      xxx links to PreProc
vimPatSepErr   xxx links to vimPatSep
vimPatSep      xxx links to SpecialChar
vimPatSepZ     xxx links to vimPatSep
vimPatSepZone  xxx links to vimString
vimPatSepR     xxx links to vimPatSep
vimPatRegion   xxx cleared
vimNotPatSep   xxx links to vimString
vimStringCont  xxx links to vimString
vimSubstTwoBS  xxx links to vimString
vimSubstSubstr xxx links to SpecialChar
vimCollection  xxx cleared
vimSubstPat    xxx cleared
vimSubst1      xxx links to vimSubst
vimSubstDelim  xxx links to Delimiter
vimSubstRep4   xxx cleared
vimSubstFlagErr xxx links to vimError
vimCollClass   xxx cleared
vimCollClassErr xxx links to vimError
vimSubstFlags  xxx links to Special
vimMarkNumber  xxx links to vimNumber
vimPlainMark   xxx links to vimMark
vimPlainRegister xxx links to vimRegister
vimSetMod      xxx links to vimOption
vimSetSep      xxx links to Statement
vimMapMod      xxx links to vimBracket
vimMapLhs      xxx cleared
vimAutoCmdSpace xxx cleared
vimAutoEventList xxx cleared
vimAutoCmdSfxList xxx cleared
vimEchoHLNone  xxx links to vimGroup
vimMapBang     xxx links to vimCommand
vimUnmap       xxx links to vimMap
vimMapRhs      xxx cleared
vimMapModKey   xxx links to vimFuncSID
vimMapModErr   xxx links to vimError
vimMapRhsExtend xxx cleared
vimMenuBang    xxx cleared
vimMenuPriority xxx cleared
vimMenuName    xxx links to PreProc
vimMenuMod     xxx links to vimMapMod
vimMenuNameMore xxx links to vimMenuName
vimMenuMap     xxx cleared
vimMenuRhs     xxx cleared
vimBracket     xxx links to Delimiter
vimUserFunc    xxx links to Normal
vimElseIfErr   xxx links to Error
vimBufnrWarn   xxx links to vimWarn
vimNormCmds    xxx cleared
vimGroupSpecial xxx links to Special
vimGroupList   xxx cleared
vimSynError    xxx links to Error
vimSynContains xxx links to vimSynOption
vimSynKeyContainedin xxx links to vimSynContains
vimSynNextgroup xxx links to vimSynOption
vimSynType     xxx links to vimSpecial
vimAuSyntax    xxx cleared
vimSynCase     xxx links to Type
vimSynCaseError xxx links to vimError
vimClusterName xxx cleared
vimGroupName   xxx cleared
vimGroupAdd    xxx links to vimSynOption
vimGroupRem    xxx links to vimSynOption
vimSynKeyOpt   xxx links to vimSynOption
vimSynKeyRegion xxx cleared
vimMtchComment xxx links to vimComment
vimSynMtchOpt  xxx links to vimSynOption
vimSynRegPat   xxx links to vimString
vimSynMatchRegion xxx cleared
VimSynMtchCchar xxx cleared
vimSynPatRange xxx links to vimString
vimSynNotPatRange xxx links to vimSynRegPat
vimSynRegOpt   xxx links to vimSynOption
vimSynReg      xxx links to Type
vimSynMtchGrp  xxx links to vimSynOption
vimSynRegion   xxx cleared
vimSynPatMod   xxx cleared
vimSyncC       xxx links to Type
vimSyncLines   xxx cleared
vimSyncMatch   xxx cleared
vimSyncError   xxx links to Error
vimSyncLinebreak xxx cleared
vimSyncLinecont xxx cleared
vimSyncRegion  xxx cleared
vimSyncGroupName xxx links to vimGroupName
vimSyncKey     xxx links to Type
vimSyncGroup   xxx links to vimGroupName
vimSyncNone    xxx links to Type
vimHiLink      xxx cleared
vimHiClear     xxx cleared
vimHiKeyList   xxx cleared
vimHiBang      xxx cleared
vimHiGroup     xxx links to vimGroupName
vimHiAttrib    xxx links to PreProc
vimFgBgAttrib  xxx links to vimHiAttrib
vimHiAttribList xxx links to vimError
vimHiCtermColor xxx cleared
vimHiFontname  xxx cleared
vimHiGuiFontname xxx cleared
vimHiGuiRgb    xxx links to vimNumber
vimHiCtermError xxx links to vimError
vimHiTerm      xxx links to Type
vimHiCTerm     xxx links to vimHiTerm
vimHiStartStop xxx links to vimHiTerm
vimHiCtermFgBg xxx links to vimHiTerm
vimHiGui       xxx links to vimHiTerm
vimHiGuiFont   xxx links to vimHiTerm
vimHiGuiFgBg   xxx links to vimHiTerm
vimHiKeyError  xxx links to vimError
vimHiTermcap   xxx cleared
vimCommentTitle xxx links to PreProc
vimCommentTitleLeader xxx cleared
vimSearchDelim xxx links to Statement
vimSearch      xxx links to vimString
vimGlobal      xxx cleared
vimEmbedError  xxx links to vimError
pythonStatement xxx links to Statement
pythonFunction xxx links to Function
pythonConditional xxx links to Conditional
pythonRepeat   xxx links to Repeat
pythonOperator xxx links to Operator
pythonException xxx links to Exception
pythonInclude  xxx links to Include
pythonDecorator xxx links to Define
pythonTodo     xxx links to Todo
pythonComment  xxx links to Comment
pythonEscape   xxx links to Special
pythonString   xxx links to String
pythonSpaceError xxx cleared
pythonDoctest  xxx links to Special
pythonRawString xxx links to String
pythonNumber   xxx links to Number
pythonBuiltin  xxx links to Function
pythonExceptions xxx links to Structure
pythonDoctestValue xxx links to Define
pythonSync     xxx cleared
vimScriptDelim xxx links to Comment
vimPythonRegion xxx cleared
vimAugroupSyncA xxx cleared
vimAuHighlight xxx links to vimHighlight
vimError       xxx links to Error
vimKeyCodeError xxx links to vimError
vimWarn        xxx links to WarningMsg
vimAutoCmdOpt  xxx links to vimOption
vimAutoSet     xxx links to vimCommand
vimCondHL      xxx links to vimCommand
vimElseif      xxx links to vimCondHL
vimSynOption   xxx links to Special
vimKeyCode     xxx links to vimSpecFile
vimSpecial     xxx links to Type
vimFold        xxx links to Folded
vimHLMod       xxx links to PreProc
vimKeyword     xxx links to Statement
vimStatement   xxx links to Statement
col_black_white xxx ctermfg=0 ctermbg=15 guifg=black guibg=white
col_white_black xxx ctermfg=15 ctermbg=0 guifg=white guibg=black
col_black_black xxx ctermfg=0 ctermbg=0 guifg=black guibg=black
col_darkred_white xxx ctermfg=4 ctermbg=15 guifg=darkred guibg=white
col_white_darkred xxx ctermfg=15 ctermbg=4 guifg=white guibg=darkred
col_darkred_black xxx ctermfg=4 ctermbg=0 guifg=darkred guibg=black
col_black_darkred xxx ctermfg=0 ctermbg=4 guifg=black guibg=darkred
col_darkgreen_white xxx ctermfg=2 ctermbg=15 guifg=darkgreen guibg=white
col_white_darkgreen xxx ctermfg=15 ctermbg=2 guifg=white guibg=darkgreen
col_darkgreen_black xxx ctermfg=2 ctermbg=0 guifg=darkgreen guibg=black
col_black_darkgreen xxx ctermfg=0 ctermbg=2 guifg=black guibg=darkgreen
col_brown_white xxx ctermfg=6 ctermbg=15 guifg=brown guibg=white
col_white_brown xxx ctermfg=15 ctermbg=6 guifg=white guibg=brown
col_brown_black xxx ctermfg=6 ctermbg=0 guifg=brown guibg=black
col_black_brown xxx ctermfg=0 ctermbg=6 guifg=black guibg=brown
col_darkblue_white xxx ctermfg=1 ctermbg=15 guifg=darkblue guibg=white
col_white_darkblue xxx ctermfg=15 ctermbg=1 guifg=white guibg=darkblue
col_darkblue_black xxx ctermfg=1 ctermbg=0 guifg=darkblue guibg=black
col_black_darkblue xxx ctermfg=0 ctermbg=1 guifg=black guibg=darkblue
col_darkmagenta_white xxx ctermfg=5 ctermbg=15 guifg=darkmagenta guibg=white
col_white_darkmagenta xxx ctermfg=15 ctermbg=5 guifg=white guibg=darkmagenta
col_darkmagenta_black xxx ctermfg=5 ctermbg=0 guifg=darkmagenta guibg=black
col_black_darkmagenta xxx ctermfg=0 ctermbg=5 guifg=black guibg=darkmagenta
col_darkcyan_white xxx ctermfg=3 ctermbg=15 guifg=darkcyan guibg=white
col_white_darkcyan xxx ctermfg=15 ctermbg=3 guifg=white guibg=darkcyan
col_darkcyan_black xxx ctermfg=3 ctermbg=0 guifg=darkcyan guibg=black
col_black_darkcyan xxx ctermfg=0 ctermbg=3 guifg=black guibg=darkcyan
col_lightgray_white xxx ctermfg=7 ctermbg=15 guifg=lightgray guibg=white
col_white_lightgray xxx ctermfg=15 ctermbg=7 guifg=white guibg=lightgray
col_lightgray_black xxx ctermfg=7 ctermbg=0 guifg=lightgray guibg=black
col_black_lightgray xxx ctermfg=0 ctermbg=7 guifg=black guibg=lightgray
col_darkgray_white xxx ctermfg=8 ctermbg=15 guifg=darkgray guibg=white
col_white_darkgray xxx ctermfg=15 ctermbg=8 guifg=white guibg=darkgray
col_darkgray_black xxx ctermfg=8 ctermbg=0 guifg=darkgray guibg=black
col_black_darkgray xxx ctermfg=0 ctermbg=8 guifg=black guibg=darkgray
col_red_white  xxx ctermfg=12 ctermbg=15 guifg=red guibg=white
col_white_red  xxx ctermfg=15 ctermbg=12 guifg=white guibg=red
col_red_black  xxx ctermfg=12 ctermbg=0 guifg=red guibg=black
col_black_red  xxx ctermfg=0 ctermbg=12 guifg=black guibg=red
col_green_white xxx ctermfg=10 ctermbg=15 guifg=green guibg=white
col_white_green xxx ctermfg=15 ctermbg=10 guifg=white guibg=green
col_green_black xxx ctermfg=10 ctermbg=0 guifg=green guibg=black
col_black_green xxx ctermfg=0 ctermbg=10 guifg=black guibg=green
col_yellow_white xxx ctermfg=14 ctermbg=15 guifg=yellow guibg=white
col_white_yellow xxx ctermfg=15 ctermbg=14 guifg=white guibg=yellow
col_yellow_black xxx ctermfg=14 ctermbg=0 guifg=yellow guibg=black
col_black_yellow xxx ctermfg=0 ctermbg=14 guifg=black guibg=yellow
col_blue_white xxx ctermfg=9 ctermbg=15 guifg=blue guibg=white
col_white_blue xxx ctermfg=15 ctermbg=9 guifg=white guibg=blue
col_blue_black xxx ctermfg=9 ctermbg=0 guifg=blue guibg=black
col_black_blue xxx ctermfg=0 ctermbg=9 guifg=black guibg=blue
col_magenta_white xxx ctermfg=13 ctermbg=15 guifg=magenta guibg=white
col_white_magenta xxx ctermfg=15 ctermbg=13 guifg=white guibg=magenta
col_magenta_black xxx ctermfg=13 ctermbg=0 guifg=magenta guibg=black
col_black_magenta xxx ctermfg=0 ctermbg=13 guifg=black guibg=magenta
col_cyan_white xxx ctermfg=11 ctermbg=15 guifg=cyan guibg=white
col_white_cyan xxx ctermfg=15 ctermbg=11 guifg=white guibg=cyan
col_cyan_black xxx ctermfg=11 ctermbg=0 guifg=cyan guibg=black
col_black_cyan xxx ctermfg=0 ctermbg=11 guifg=black guibg=cyan
col_white_white xxx ctermfg=15 ctermbg=15 guifg=white guibg=white
col_grey_white xxx ctermfg=7 ctermbg=15 guifg=grey guibg=white
col_white_grey xxx ctermfg=15 ctermbg=7 guifg=white guibg=grey
col_grey_black xxx ctermfg=7 ctermbg=0 guifg=grey guibg=black
col_black_grey xxx ctermfg=0 ctermbg=7 guifg=black guibg=grey
col_lightred_white xxx ctermfg=12 ctermbg=15 guifg=lightred guibg=white
col_white_lightred xxx ctermfg=15 ctermbg=12 guifg=white guibg=lightred
col_lightred_black xxx ctermfg=12 ctermbg=0 guifg=lightred guibg=black
col_black_lightred xxx ctermfg=0 ctermbg=12 guifg=black guibg=lightred
col_lightgreen_white xxx ctermfg=10 ctermbg=15 guifg=lightgreen guibg=white
col_white_lightgreen xxx ctermfg=15 ctermbg=10 guifg=white guibg=lightgreen
col_lightgreen_black xxx ctermfg=10 ctermbg=0 guifg=lightgreen guibg=black
col_black_lightgreen xxx ctermfg=0 ctermbg=10 guifg=black guibg=lightgreen
col_lightyellow_white xxx ctermfg=14 ctermbg=15 guifg=lightyellow guibg=white
col_white_lightyellow xxx ctermfg=15 ctermbg=14 guifg=white guibg=lightyellow
col_lightyellow_black xxx ctermfg=14 ctermbg=0 guifg=lightyellow guibg=black
col_black_lightyellow xxx ctermfg=0 ctermbg=14 guifg=black guibg=lightyellow
col_lightblue_white xxx ctermfg=9 ctermbg=15 guifg=lightblue guibg=white
col_white_lightblue xxx ctermfg=15 ctermbg=9 guifg=white guibg=lightblue
col_lightblue_black xxx ctermfg=9 ctermbg=0 guifg=lightblue guibg=black
col_black_lightblue xxx ctermfg=0 ctermbg=9 guifg=black guibg=lightblue
col_lightmagenta_white xxx ctermfg=13 ctermbg=15 guifg=lightmagenta guibg=white
col_white_lightmagenta xxx ctermfg=15 ctermbg=13 guifg=white guibg=lightmagenta
col_lightmagenta_black xxx ctermfg=13 ctermbg=0 guifg=lightmagenta guibg=black
col_black_lightmagenta xxx ctermfg=0 ctermbg=13 guifg=black guibg=lightmagenta
col_lightcyan_white xxx ctermfg=11 ctermbg=15 guifg=lightcyan guibg=white
col_white_lightcyan xxx ctermfg=15 ctermbg=11 guifg=white guibg=lightcyan
col_lightcyan_black xxx ctermfg=11 ctermbg=0 guifg=lightcyan guibg=black
col_black_lightcyan xxx ctermfg=0 ctermbg=11 guifg=black guibg=lightcyan
col_black      xxx ctermfg=0 guifg=black
col_darkred    xxx ctermfg=4 guifg=darkred
col_darkgreen  xxx ctermfg=2 guifg=darkgreen
col_brown      xxx ctermfg=6 guifg=brown
col_darkblue   xxx ctermfg=1 guifg=darkblue
col_darkmagenta xxx ctermfg=5 guifg=darkmagenta
col_darkcyan   xxx ctermfg=3 guifg=darkcyan
col_lightgray  xxx ctermfg=7 guifg=lightgray
col_darkgray   xxx ctermfg=8 guifg=darkgray
col_red        xxx ctermfg=12 guifg=red
col_green      xxx ctermfg=10 guifg=green
col_yellow     xxx ctermfg=14 guifg=yellow
col_blue       xxx ctermfg=9 guifg=blue
col_magenta    xxx ctermfg=13 guifg=magenta
col_cyan       xxx ctermfg=11 guifg=cyan
col_white      xxx ctermfg=15 guifg=white
col_grey       xxx ctermfg=7 guifg=grey
col_lightred   xxx ctermfg=12 guifg=lightred
col_lightgreen xxx ctermfg=10 guifg=lightgreen
col_lightyellow xxx ctermfg=14 guifg=lightyellow
col_lightblue  xxx ctermfg=9 guifg=lightblue
col_lightmagenta xxx ctermfg=13 guifg=lightmagenta
col_lightcyan  xxx ctermfg=11 guifg=lightcyan
--- Variables ---
Tlist_Max_Submenu_Items #20
loaded_snips          #1
acp_enableAtStartup   #1
acp_behaviorHtmlOmniLength #0
Tlist_WinWidth        #30
did_load_filetypes    #1
acp_mappingDriven     #0
acp_behaviorKeywordLength #2
loaded_alternateFile  #1
Tlist_Enable_Fold_Column #1
loaded_vimballPlugin   v31
Tlist_Close_On_Select #0
EVMark_sort           #1
Tlist_Use_SingleClick #0
acp_behaviorFileLength #0
loaded_autoload_acp   #1
snips_author           Me
acp_behaviorCssOmniValueLength #0
Tlist_File_Fold_Auto_Close #0
Tlist_Auto_Open       #0
colors_name            notepad2
did_load_ftplugin     #1
loaded_acp            #1
Tlist_WinHeight       #10
Tlist_Show_One_File   #0
Tlist_Auto_Highlight_Tag #1
acp_behaviorSnipmateLength #-1
acp_ignorecaseOption  #1
loaded_vimcdoc        #1
Tlist_Auto_Update     #1
Tlist_Display_Tag_Scope #1
Tlist_Compact_Format  #0
html_use_css          #1
EVHelp_Version         1.0
loaded_spellfile_plugin #1
EVMenu_version         1.0
acp_behaviorPerlOmniLength #-1
i                      ]
EVMark_methodOfOpen     tabnew 
alternateSearchPath    sfr:../source,sfr:../src,sfr:../include,sfr:../inc
acp_behaviorUserDefinedFunction  
Tlist_Sort_Type        order
acp_behaviorKeywordCommand  ^N
acp_behaviorPythonOmniLength #0
syntax_on             #1
TagList_title          __Tag_List__
Tlist_Use_Horiz_Window #0
snippets_dir           $VIMRUNTIME/snippets
Tlist_Inc_Winwidth    #1
did_ft                {'txt': 1, 'vim': 1, '_': 1}
col1                   black
col2                   lightcyan
more_save             #1
alternateNoDefaultAlternate #0
acp_behaviorKeywordIgnores []
alternateRelativeFiles #0
Tlist_Exit_OnlyWindow #0
Tlist_Display_Prototype #0
Tlist_Ctags_Cmd        ctags
loaded_2html_plugin    vim7.3_v8
loaded_matchparen     #1
vimsyn_embed           lmpPr
acp_behaviorRubyOmniMethodLength #0
acp_behaviorRubyOmniSymbolLength #1
sep                    \
EVMark_version         1.0
paste#paste_cmd       {'v': '"-c<Esc>:call paste#Paste()<CR>', 'i': 'x<BS><Esc>:call paste#Paste()<CR>gi', 'n': ':call paste#Paste()<CR>'}
Tlist_Highlight_Tag_On_BufEnter #1
acp_behavior          {'xhtml': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForHtmlOmni', 'repeat': 1, 'command': '^X^O'}], 'perl': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForPerlOmni', 'repeat': 0, 'command': '^X^O'}], 'xml': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForXmlOmni', 'repeat': 1, 'command': '^X^O'}], 'html': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForHtmlOmni', 'repeat': 1, 'command': '^X^O'}], '*': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}], 'ruby': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForRubyOmni', 'repeat': 0, 'command': '^X^O'}], 'python': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForPythonOmni', 'repeat': 0, 'command': '^X^O'}], 'css': [{'meets': 'acp#meetsForSnipmate', 'completefunc': 'acp#completeSnipmate', 'onPopupClose': 'acp#onPopupCloseSnipmate', 'repeat': 0, 'command': '^X^U'}, {'meets': 'acp#meetsForKeyword', 'repeat': 0, 'command': '^N'}, {'meets': 'acp#meetsForFile', 'repeat': 1, 'command': '^X^F'}, {'meets': 'acp#meetsForCssOmni', 'repeat': 0, 'command': '^X^O'}]}
acp_completeoptPreview #0
loaded_taglist         fast_load_done
Tlist_Show_Menu       #0
Tlist_Max_Tag_Length  #10
did_menu_trans        #1
acp_behaviorXmlOmniLength #0
Tlist_Use_Right_Window #0
acp_completeOption     .,w,b,k
Tlist_Process_File_Always #0
Tlist_GainFocus_On_ToggleOpen #0
acp_behaviorCssOmniPropertyLength #1
acp_behaviorUserDefinedMeets  
alternateExtensionsDict {'yacc': 'lex,l,lpp', 'C': 'H', 'H': 'C,CPP,CXX,CC', 'lpp': 'ypp,y,yacc', 'cpp': 'h,hpp', 'ml': 'mli', 'adb': 'ads', 'aspx.cs': 'aspx', 'aspx.vb': 'aspx', 'psl': 'ph', 'ph': 'psl', 'CXX': 'H', 'HPP': 'CPP,C', 'ads': 'adb', 'c': 'h', 'ypp': 'lpp,l,lex', 'h': 'c,cpp,cxx,cc,CC', 'aspx': 'aspx.cs,aspx.vb', 'mli': 'ml', 'CPP': 'H,HPP', 'l': 'y,yacc,ypp', 'cc': 'h', 'lex': 'yacc,y,ypp', 'hpp': 'cpp,c', 'CC': 'H,h', 'y': 'l,lex,lpp', 'cxx': 'h'}
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
EVFileExplore_version  1.0
b:undo_ftplugin        setl fo< isk< com< tw< commentstring<| unlet! b:match_ignorecase b:match_words b:match_skip
b:did_ftplugin        #1
b:this_buf_size       #3
b:changedtick         #2
w:paren_hl_on         #0
v:version             #703
v:beval_winnr         #0
v:lnum                #0
v:scrollstart          未知
v:oldfiles            ['C:\Program Files\Vim\_vimrc', 'C:\Program Files\Vim\vim73\doc\help.txt', 'E:\工作文档\winner\桌面资料\eventer细节.txt', 'C:\Program Files\Vim\vim73\doc\options.txt', '~\Desktop\src\keymap.h', '~\Desktop\src\gvim.exe.mnf', '~\Desktop\clewn-1.15\INSTALL', '~\Desktop\xpm-3.4k\README.MSW', '~\Desktop\xpm-3.4k\Makefile.noX', '~\Desktop\xpm-3.4k\Imakefile', '~\Desktop\clewn-1.15\configure', '~\Desktop\src\option.h', '~\Desktop\src\gui.h', '~\Desktop\src\fileio.c', '~\Desktop\src\ex_cmds.h', 'C:\Program Files\Vim\vim73\doc\index.txt', '~\Desktop\src\ex_eval.c', '~\Desktop\src\digraph.c', '~\Desktop\src\bigvim.bat', 'C:\Program Files\creamvim\vim73\cream\docs\TODO.txt', 'C:\Program Files\creamvim\vim73\cream\cream.vim', 'C:\Program Files\creamvim\vim73\cream\docs\KEYBOARD.txt', 'C:\Program Files\creamvim\vim73\cream\docs\CHANGELOG.txt', 'C:\Program Files\creamvim\vim73\cream\docs\WINDOWS.txt', 'C:\Program Files\creamvim\vim73\cream\docs\PressRelease.txt', 'C:\Program Files\creamvim\vim73\cream\docs\DEVELOPER.txt', 'C:\Program Files\creamvim\vim73\cream\help\EnhancedCommentify.txt', 'C:/Program Files/creamvim/vim73/bugreport.vim', 'C:\Program Files\creamvim\vim73\cream\lang\menu_zh_cn.utf-8.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu.vim', 'C:\Program Files\Vim\vim73\lang\menu_zh_cn.utf-8.vim', 'C:\Program Files\creamvim\vim73\menu.vim', 'C:\Program Files\creamvim\vim73\cream\cream-settings.vim', 'C:\Program Files\creamvim\vim73\cream\cream-keys.vim', 'C:\Program Files\creamvim\vim73\cream\docs\README.txt', 'C:\Program Files\creamvim\vim73\cream\cream-addon.vim', 'C:\Program Files\creamvim\vim73\cream\cream-abbr.vim', 'C:\Program Files\creamvim\vim73\cream\Rndm.vim', 'C:\Program Files\creamvim\vim73\cream\EnhancedCommentify.vim', 'C:\Program Files\creamvim\vim73\cream\creamrc', 'C:\Program Files\creamvim\vim73\cream\cream-lib.vim', 'C:\Program Files\creamvim\vim73\cream\cream-conf.example.vim', 'C:\Program Files\creamvim\vim73\cream\cream-capitalization.vim', 'C:\Program Files\creamvim\vim73\cream\cream-abbr-eng.vim', 'C:\Program Files\Vim\vim73\doc\map.txt', 'C:\Program Files\creamvim\vim73\makemenu.vim', 'C:\Program Files\creamvim\vim73\indent.vim', 'C:\Program Files\creamvim\vim73\filetype.vim', 'C:\Program Files\creamvim\vim73\mswin.vim', 'C:\Program Files\creamvim\_vimrc', 'C:\Program Files\creamvim\vim73\vimrc_example.vim', 'C:\Program Files\creamvim\vim73\gvimrc_example.vim', 'C:\Program Files\creamvim\vim73\cream\cream-server.vim', 'C:\Program Files\creamvim\vim73\cream\cream-ascii.vim', '~\.cream\tmp\vimrc_example.vim.~', '~\.cream\tmp\_vimrc.~', 'C:\Program Files\creamvim\vim73\cream\cream-lib-os.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu-window.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu-settings.vim', 'C:\Program Files\creamvim\vim73\cream\cream-menu-popup.vim', '~\Desktop\vim工作安排.txt', 'C:\Program Files\Vim\vim73\doc\tagsrch.txt', 'C:\Program Files\Vim\vim73\doc\tags', 'C:\Program Files\Vim\vim73\doc\workshop.txt', 'C:\Program Files\Vim\vim73\doc\develop.txt', 'C:\Program Files\Vim\vim73\doc\tags-cn', 'C:\Program Files\Vim\vim73\doc\workshop.cnx', 'C:\Program Files\Vim\vim73\keymap\pinyin.vim', 'C:\Program Files\Vim\vim73\doc\various.cnx', 'C:\Program Files\Vim\vim73\menu.vim', '~\Desktop\简繁字体表.txt', 'C:\Program Files\Vim\vim73\doc\eval.cnx', 'C:\Program Files\Vim\vimfiles\doc\eval.cnx', 'C:\Program Files\Vim\vim73\doc\eval.txt', 'E:\工作文档\winner\桌面资料\设计vim插件功能.txt', 'C:\Program Files\Vim\vimfiles\doc\autocmd.cnx', 'C:\Program Files\Vim\vimfiles\syntax\help_cn.vim', 'C:\Program Files\Vim\vimfiles\doc\help.cnx', 'C:\Program Files\creamvim\vim73\cream\cream-gui.vim', 'C:\Program Files\creamvim\vim73\lang\menu_zh_cn.utf-8.vim']
v:dying               #0
v:lang                 zh_CN.utf-8
v:count               #0
v:progname             gvim.exe
v:cmdbang             #0
v:foldlevel           #0
v:ctype                C
v:prevcount           #0
v:register             "
v:mouse_win           #0
v:count1              #1
v:foldstart           #0
v:foldend             #0
v:profiling           #0
v:beval_col           #0
v:beval_lnum          #0
v:mouse_lnum          #0
v:insertmode           i
v:beval_bufnr         #0
v:shell_error         #0
v:servername           GVIM
v:lc_time              Chinese (Simplified)_People's Republic of China.936
v:searchforward       #1
v:mouse_col           #0
v:statusmsg            找不到缩写